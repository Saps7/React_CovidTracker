{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sayantan/Documents/CODE/React/cov-live/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/home/sayantan/Documents/CODE/React/cov-live/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sayantan/Documents/CODE/React/cov-live/src/components/Global/GlobalData.js\";\n\nfunction _templateObject7() {\n  const data = _taggedTemplateLiteral([\"\\n    text-align:justify;\\n    padding:10px;\\n    border-radius:0.5rem;\\n    background:rgba(255, 255, 255, 0.3);\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n    position:absolute;\\n    backface-visibility:hidden;\\n    color:white;\\n    width:100%;\\n    height:100%;\\n    display:flex;\\n    padding:15px;\\n    flex-direction:column;\\n    flex-wrap:wrap;\\n    justify-content:space-between;\\n    text-align:center;\\n    transform:rotateY(180deg);\\n    border-radius:0.5rem;\\n    h4\\n    {\\n        font-weight: 500;\\n    }\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n    width:100%;\\n    height:fit-content;\\n    display : flex;\\n    flex-flow : column;\\n    flex-wrap: wrap;\\n    justify-content:space-between;\\n    text-align:justify;\\n    position : absolute;\\n    top:30px;\\n    left: 20px;\\n    \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    position:absolute;\\n    backface-visibility:hidden;\\n    color:black;\\n    width:100%;\\n    height:100%;\\n    border-radius:0.5rem;\\n    transform:rotateY(0deg);\\n    \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    width:100%;\\n    height:100%;\\n    position:absolute;\\n    backface-visibility:hidden;\\n    transform-style:preserve-3d;\\n    transition:1s all;\\n    &:active{\\n        transform: rotateY(180deg);\\n    }\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n      position:relative;\\n      transition:0.8s all;\\n      height:400px;\\n      width:400px;\\n      margin-bottom:20px;\\n      perspective:1000px;\\n      overflow :hidden;\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    display:flex;\\n    flex-wrap:wrap;\\n    flex-direction:row;\\n    justify-content:space-between;\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { GlobalUrl } from '../../axios';\nimport styled from 'styled-components';\nimport AreaChartCard from './CardGraph/AreaChartCard';\nimport { IoIosArrowDropupCircle } from 'react-icons/io';\n\nconst GlobalData = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        GlobalInfo = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState({\n    Cases: [],\n    Recovered: [],\n    Deaths: [],\n    Actives: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        Historical = _useState4[0],\n        setHistory = _useState4[1]; //const date =`${new Date().getFullYear()}-${\"0\" + (new Date().getMonth() + 1)}-${new Date().getUTCDate()}`\n\n\n  useEffect(() => {\n    GlobalUrl.get(\"/all\").then(resp => {\n      setData(resp.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  useEffect(() => {\n    GlobalUrl.get('/historical/all').then(resp => {\n      const CaseDiff = Object.values(resp.data.cases).map((each, id) => {\n        return Object.values(resp.data.cases)[id + 1] - each;\n      }).filter(each => !!each);\n      const actives = Object.values(resp.data.cases).map((each, id) => {\n        return each - Object.values(resp.data.recovered)[id];\n      }).map((each, id) => {\n        return each - Object.values(resp.data.deaths)[id];\n      });\n      const ActiveDiff = actives.map((each, id) => {\n        return actives[id + 1] - each;\n      }).filter(each => !!each);\n      const RecoveredDiff = Object.values(resp.data.recovered).map((each, id) => {\n        return Object.values(resp.data.recovered)[id + 1] - each;\n      }).filter(each => !!each);\n      const DeathDiff = Object.values(resp.data.deaths).map((each, id) => {\n        return Object.values(resp.data.deaths)[id + 1] - each;\n      }).filter(each => !!each);\n      setHistory({\n        Cases: CaseDiff,\n        Actives: ActiveDiff,\n        Recovered: RecoveredDiff,\n        Deaths: DeathDiff\n      });\n    }).then(err => {\n      console.log(err);\n    });\n  }, []);\n  const Cards = Math.a[({\n    styles: \"linear-gradient(to right, #e53935, #e35d5b)\",\n    color: \"rgb(255, 196, 196)\",\n    CardFront: {\n      type: \"Total\",\n      CurrData: GlobalInfo.cases,\n      NewCase: GlobalInfo.todayCases,\n      HistoryData: Historical.Cases\n    },\n    CardBack: {\n      affc: \"Affected Countries.\",\n      affectedCountries: GlobalInfo.affectedCountries,\n      type: \"Cases per million\",\n      PerOneMillion: GlobalInfo.casesPerOneMillion,\n      tN: \"Total tests\",\n      ts: GlobalInfo.tests,\n      tPM: \"Tests per million\",\n      tPerOneMillion: GlobalInfo.testsPerOneMillion\n    }\n  }, {\n    styles: \"linear-gradient(to right, #ff512f, #f09819)\",\n    color: \"rgb(255, 222, 201)\",\n    CardFront: {\n      type: \"Active\",\n      CurrData: GlobalInfo.active,\n      NewCase: GlobalInfo.todayCases,\n      HistoryData: Historical.Actives\n    },\n    CardBack: {\n      type: \"Active per million\",\n      PerOneMillion: GlobalInfo.activePerOneMillion,\n      tN: \"Critical Cases\",\n      ts: GlobalInfo.critical,\n      tPM: \"Critical per million\",\n      tPerOneMillion: GlobalInfo.criticalPerOneMillion\n    }\n  }, {\n    styles: \"linear-gradient(to right, #4cb8c4, #3cd3ad)\",\n    color: 'rgb(201, 255, 238)',\n    CardFront: {\n      type: \"Recovered\",\n      CurrData: GlobalInfo.recovered,\n      NewCase: GlobalInfo.todayRecovered,\n      HistoryData: Historical.Recovered\n    },\n    CardBack: {\n      type: \"Recovered per million\",\n      PerOneMillion: GlobalInfo.recoveredPerOneMillion\n    }\n  }, {\n    styles: \"linear-gradient(to right, #606c88, #3f4c6b)\",\n    color: \"rgb(193, 193, 193)\",\n    CardFront: {\n      type: \"Deaths\",\n      CurrData: GlobalInfo.deaths,\n      NewCase: GlobalInfo.todayDeaths,\n      HistoryData: Historical.Deaths\n    },\n    CardBack: {\n      type: \"Deaths per million\",\n      PerOneMillion: GlobalInfo.deathsPerOneMillion\n    }\n  })];\n  const Globals = styled.div(_templateObject());\n  const Wrapper = styled.div(_templateObject2());\n  const Card = styled.div(_templateObject3());\n  const Front = styled.div(_templateObject4());\n  const FrontInfo = styled.div(_templateObject5());\n  const Back = styled.div(_templateObject6());\n  const CardBackInfos = styled.div(_templateObject7());\n  return /*#__PURE__*/React.createElement(Globals, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, Cards.map((each, index) => /*#__PURE__*/React.createElement(Wrapper, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Front, {\n    style: {\n      background: each.styles,\n      color: \"#fff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FrontInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      fontWeight: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 37\n    }\n  }, each.CardFront.type), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontWeight: 700,\n      fontSize: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 37\n    }\n  }, (each.CardFront.CurrData / 1000).toFixed(2), \"K\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"17px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 37\n    }\n  }, each.CardFront.NewCase, \" \", /*#__PURE__*/React.createElement(IoIosArrowDropupCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 93\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 3.1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(AreaChartCard, {\n    Data: each.CardFront.HistoryData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 59\n    }\n  }))), /*#__PURE__*/React.createElement(Back, {\n    style: {\n      background: each.styles\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 32\n    }\n  }, \"Aditional Infos\"), /*#__PURE__*/React.createElement(CardBackInfos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 37\n    }\n  }, each.CardBack.type), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 37\n    }\n  }, each.CardBack.PerOneMillion), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 37\n    }\n  }, each.CardBack.affc), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 37\n    }\n  }, each.CardBack.affectedCountries), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 37\n    }\n  }, each.CardBack.tN), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 37\n    }\n  }, each.CardBack.ts), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 37\n    }\n  }, each.CardBack.tPM), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 37\n    }\n  }, each.CardBack.tPerOneMillion)), /*#__PURE__*/React.createElement(\"h6\", {\n    style: {\n      opacity: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 32\n    }\n  }, \"CovidApi.all\"))))));\n};\n\nexport default GlobalData;","map":{"version":3,"sources":["/home/sayantan/Documents/CODE/React/cov-live/src/components/Global/GlobalData.js"],"names":["React","useEffect","useState","GlobalUrl","styled","AreaChartCard","IoIosArrowDropupCircle","GlobalData","GlobalInfo","setData","Cases","Recovered","Deaths","Actives","Historical","setHistory","get","then","resp","data","catch","err","console","log","CaseDiff","Object","values","cases","map","each","id","filter","actives","recovered","deaths","ActiveDiff","RecoveredDiff","DeathDiff","Cards","Math","a","styles","color","CardFront","type","CurrData","NewCase","todayCases","HistoryData","CardBack","affc","affectedCountries","PerOneMillion","casesPerOneMillion","tN","ts","tests","tPM","tPerOneMillion","testsPerOneMillion","active","activePerOneMillion","critical","criticalPerOneMillion","todayRecovered","recoveredPerOneMillion","todayDeaths","deathsPerOneMillion","Globals","div","Wrapper","Card","Front","FrontInfo","Back","CardBackInfos","index","background","fontWeight","fontSize","toFixed","flex","opacity"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { GlobalUrl } from '../../axios'\nimport styled from 'styled-components'\nimport AreaChartCard from './CardGraph/AreaChartCard'\nimport { IoIosArrowDropupCircle } from 'react-icons/io'\n\nconst GlobalData = () => {\n    const [GlobalInfo,setData] = useState([])\n    const [Historical,setHistory] = useState(\n        {\n            Cases : [],\n            Recovered : [],\n            Deaths : [],\n            Actives : []\n        }\n    )\n    //const date =`${new Date().getFullYear()}-${\"0\" + (new Date().getMonth() + 1)}-${new Date().getUTCDate()}`\n    useEffect(() =>\n    {\n        GlobalUrl.get(`/all`)\n        .then(resp =>\n            {\n                setData(resp.data)\n            })\n        .catch(err =>\n            {\n                console.log(err)\n            })\n    },[])\n    useEffect(() =>\n    {\n        GlobalUrl.get('/historical/all')\n        .then(resp =>\n            {\n                const CaseDiff = Object.values(resp.data.cases).map((each,id) =>\n                {\n                    return Object.values(resp.data.cases)[id+1] - each\n                }).filter(each => !!each)\n                const actives = Object.values(resp.data.cases).map((each,id) =>\n                {\n                    return each - Object.values(resp.data.recovered)[id]\n                }).map((each,id) =>\n                {\n                    return each - Object.values(resp.data.deaths)[id]\n                })\n                const ActiveDiff = actives.map((each,id) =>\n                {\n                    return actives[id+1] - each\n                }).filter(each => !!each)\n                const RecoveredDiff = Object.values(resp.data.recovered).map((each,id) =>\n                {\n                    return Object.values(resp.data.recovered)[id+1] - each\n                }).filter(each => !!each)\n                const DeathDiff =  Object.values(resp.data.deaths).map((each,id) =>\n                {\n                    return  Object.values(resp.data.deaths)[id+1] - each\n                }).filter(each => !!each)\n                setHistory(\n                    {\n                        Cases : CaseDiff,\n                        Actives : ActiveDiff,\n                        Recovered : RecoveredDiff,\n                        Deaths : DeathDiff\n                    }\n                )\n            })\n        .then(err =>\n            {\n                console.log(err);\n            })\n    },[])\n    const Cards=Math.a[\n        {\n            styles:\"linear-gradient(to right, #e53935, #e35d5b)\",\n            color : \"rgb(255, 196, 196)\",\n            CardFront:{\n                type:\"Total\",\n                CurrData:GlobalInfo.cases,\n                NewCase:GlobalInfo.todayCases,\n                HistoryData : Historical.Cases\n                \n            },\n            CardBack:{\n                affc:\"Affected Countries.\",\n                affectedCountries:GlobalInfo.affectedCountries,\n                type:\"Cases per million\",\n                PerOneMillion: GlobalInfo.casesPerOneMillion,\n                tN:\"Total tests\",\n                ts:GlobalInfo.tests,\n                tPM:\"Tests per million\",\n                tPerOneMillion:GlobalInfo.testsPerOneMillion\n            }\n        },\n        {\n            styles:\"linear-gradient(to right, #ff512f, #f09819)\",\n            color:\"rgb(255, 222, 201)\",\n            CardFront:{\n                type:\"Active\",\n                CurrData:GlobalInfo.active,\n                NewCase:GlobalInfo.todayCases,\n                HistoryData : Historical.Actives\n            },\n            CardBack:{\n                type:\"Active per million\",\n                PerOneMillion:GlobalInfo.activePerOneMillion,\n                tN:\"Critical Cases\",\n                ts:GlobalInfo.critical,\n                tPM:\"Critical per million\",\n                tPerOneMillion:GlobalInfo.criticalPerOneMillion,\n            }\n        },\n        {\n            styles:\"linear-gradient(to right, #4cb8c4, #3cd3ad)\",\n            color:'rgb(201, 255, 238)',\n            CardFront:{\n                type:\"Recovered\",\n                CurrData:GlobalInfo.recovered,\n                NewCase:GlobalInfo.todayRecovered,\n                HistoryData : Historical.Recovered\n                \n            },\n            CardBack:{\n               type:\"Recovered per million\",\n               PerOneMillion:GlobalInfo.recoveredPerOneMillion\n            }\n        },\n        {\n            styles:\"linear-gradient(to right, #606c88, #3f4c6b)\",\n            color:\"rgb(193, 193, 193)\",\n            CardFront:{\n                type:\"Deaths\",\n                CurrData:GlobalInfo.deaths,\n                NewCase:GlobalInfo.todayDeaths,\n                HistoryData : Historical.Deaths\n          \n            },\n            CardBack:{\n               type:\"Deaths per million\",\n               PerOneMillion:GlobalInfo.deathsPerOneMillion\n            }\n        }\n    ]\n    const Globals = styled.div`\n    display:flex;\n    flex-wrap:wrap;\n    flex-direction:row;\n    justify-content:space-between;\n    `\n    const Wrapper= styled.div`\n      position:relative;\n      transition:0.8s all;\n      height:400px;\n      width:400px;\n      margin-bottom:20px;\n      perspective:1000px;\n      overflow :hidden;\n    `\n    const Card= styled.div`\n    width:100%;\n    height:100%;\n    position:absolute;\n    backface-visibility:hidden;\n    transform-style:preserve-3d;\n    transition:1s all;\n    &:active{\n        transform: rotateY(180deg);\n    }\n    `\n    const Front = styled.div`\n    position:absolute;\n    backface-visibility:hidden;\n    color:black;\n    width:100%;\n    height:100%;\n    border-radius:0.5rem;\n    transform:rotateY(0deg);\n    `\n    const FrontInfo = styled.div`\n    width:100%;\n    height:fit-content;\n    display : flex;\n    flex-flow : column;\n    flex-wrap: wrap;\n    justify-content:space-between;\n    text-align:justify;\n    position : absolute;\n    top:30px;\n    left: 20px;\n    `\n\n\n    const Back = styled.div`\n    position:absolute;\n    backface-visibility:hidden;\n    color:white;\n    width:100%;\n    height:100%;\n    display:flex;\n    padding:15px;\n    flex-direction:column;\n    flex-wrap:wrap;\n    justify-content:space-between;\n    text-align:center;\n    transform:rotateY(180deg);\n    border-radius:0.5rem;\n    h4\n    {\n        font-weight: 500;\n    }`\n    const CardBackInfos = styled.div`\n    text-align:justify;\n    padding:10px;\n    border-radius:0.5rem;\n    background:rgba(255, 255, 255, 0.3);`\n    return (\n        <Globals>\n            {   \n                Cards.map((each,index) =>\n                (   \n                    \n                    <Wrapper key={index}>\n                        <Card>\n                            <Front style={{background:each.styles,color:\"#fff\"}}>\n                            <FrontInfo>\n                                    <h5 style={{fontWeight:500}}>{each.CardFront.type}</h5>\n                                    <div style={{fontWeight:700,fontSize:\"50px\"}}>{(each.CardFront.CurrData/1000).toFixed(2)}K</div>\n                                    <div style={{fontSize:\"17px\"}}>{each.CardFront.NewCase} <IoIosArrowDropupCircle /></div>\n                            </FrontInfo>\n                                <div style={{flex: 3.1}} ><AreaChartCard Data={each.CardFront.HistoryData}/></div>\n                            </Front>\n                            <Back style={{background:each.styles}}>\n                               <h4>Aditional Infos</h4>\n                                <CardBackInfos>\n                                    <h3>{each.CardBack.type}</h3>\n                                    <div>{each.CardBack.PerOneMillion}</div>\n                                    <h3>{each.CardBack.affc}</h3>\n                                    <div>{each.CardBack.affectedCountries}</div>\n                                    <h3>{each.CardBack.tN}</h3>\n                                    <div>{each.CardBack.ts}</div>\n                                    <h3>{each.CardBack.tPM}</h3>\n                                    <div>{each.CardBack.tPerOneMillion}</div>\n                                </CardBackInfos>\n                               <h6 style={{opacity:0.5}}>CovidApi.all</h6>\n                            </Back>\n                        </Card>\n                    </Wrapper>\n                ))\n            }\n        </Globals>\n    )\n}\n\nexport default GlobalData"]},"metadata":{},"sourceType":"module"}