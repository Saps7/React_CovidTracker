{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/sayantan/Documents/CODE/React/cov-live/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/home/sayantan/Documents/CODE/React/cov-live/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function _templateObject3(){const data=_taggedTemplateLiteral([\"\\nflex:1;\\nborder-radius:0.5rem;\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){const data=_taggedTemplateLiteral([\"\\nflex:1.1;\\nbackground-color:whitesmoke;\\nmargin-right:20px;\\nborder-radius:0.5rem;\\npadding:20px;\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){const data=_taggedTemplateLiteral([\"\\ndisplay:flex;\\nflex-wrap:wrap;\\nflex-flow:row;\\njustify-content:space-between;\\nwidth:100%;\\nmargin-bottom:20px;\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from'react';import{covidURL}from'../../axios';import styled from'styled-components';import{MDBDataTableV5,MDBBtn}from'mdbreact';import Regional from'./Regional Table/Regional';const Tables=()=>{const _useState=useState([]),_useState2=_slicedToArray(_useState,2),CountryData=_useState2[0],setCdata=_useState2[1];const _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),Name=_useState4[0],setName=_useState4[1];const Namegetter=n=>{setName(n);console.log(n);};const date=\"\".concat(new Date().getFullYear(),\"-\").concat(\"0\"+(new Date().getMonth()+1),\"-\").concat(new Date().getUTCDate());useEffect(()=>{covidURL.get(\"/\".concat(date)).then(resp=>{setCdata(Object.values(resp.data.dates[\"\".concat(date)].countries));}).catch(err=>{console.log(err);});},[date]);const dataTable={columns:[{label:'Country',field:'country',width:660,sort:'desc',attributes:{'aria-controls':'DataTable','aria-label':'Name'}},{label:'Total Cases',field:'total',width:200},{label:'Active',field:'active',width:200},{label:'Recovered',field:'recovered',sort:'asc',width:200},{label:'Deaths',field:'deaths',sort:'disabled',width:100},{label:'Regional',field:'reg',width:50}],rows:CountryData.map(each=>({country:\"\".concat(each.name),total:\"\".concat(each.today_confirmed),active:\"\".concat(each.today_open_cases),recovered:\"\".concat(each.today_recovered),deaths:\"\".concat(each.today_deaths),reg:each.regions.length===0?\"\":/*#__PURE__*/React.createElement(MDBBtn,{tag:\"a\",size:\"sm\",floating:true,gradient:\"aqua\",onClick:()=>Namegetter(each.name)},\"Go\")}))};return/*#__PURE__*/React.createElement(TableConatiner,null,/*#__PURE__*/React.createElement(MDBtableWrapper,null,/*#__PURE__*/React.createElement(MDBDataTableV5,{borderless:true,materialSearch:true,data:dataTable,entriesOptions:[5,10]})),/*#__PURE__*/React.createElement(MapWrapper,null,/*#__PURE__*/React.createElement(Regional,{CountryName:Name})));};export default Tables;const TableConatiner=styled.div(_templateObject());const MDBtableWrapper=styled.div(_templateObject2());const MapWrapper=styled.div(_templateObject3());","map":{"version":3,"sources":["/home/sayantan/Documents/CODE/React/cov-live/src/components/Tables&Maps/Tables.js"],"names":["React","useState","useEffect","covidURL","styled","MDBDataTableV5","MDBBtn","Regional","Tables","CountryData","setCdata","Name","setName","Namegetter","n","console","log","date","Date","getFullYear","getMonth","getUTCDate","get","then","resp","Object","values","data","dates","countries","catch","err","dataTable","columns","label","field","width","sort","attributes","rows","map","each","country","name","total","today_confirmed","active","today_open_cases","recovered","today_recovered","deaths","today_deaths","reg","regions","length","TableConatiner","div","MDBtableWrapper","MapWrapper"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { covidURL } from '../../axios'\nimport styled from 'styled-components'\nimport { MDBDataTableV5, MDBBtn } from 'mdbreact'\nimport Regional from './Regional Table/Regional'\n\nconst Tables = () => {\n    const [CountryData,setCdata] = useState([])\n    const [Name,setName] = useState(null)\n    const Namegetter = (n) =>\n    {\n      setName(n);\n      console.log(n);\n    }\n    const date =`${new Date().getFullYear()}-${\"0\" + (new Date().getMonth() + 1)}-${new Date().getUTCDate()}`\n    useEffect(() =>\n    {\n        covidURL.get(`/${date}`)\n        .then(resp =>\n            {\n                setCdata(Object.values(resp.data.dates[`${date}`].countries))\n            })\n        .catch(err =>\n            {\n                console.log(err)\n            })\n    },[date])\n    const dataTable ={\n        columns: [\n            {\n              label: 'Country',\n              field: 'country',\n              width: 660,\n              sort: 'desc',\n              attributes: {\n                'aria-controls': 'DataTable',\n                'aria-label': 'Name',\n              },\n            },\n            {\n              label: 'Total Cases',\n              field: 'total',\n              width: 200,\n            },\n            {\n              label: 'Active',\n              field: 'active',\n              width: 200,\n            },\n            {\n              label: 'Recovered',\n              field: 'recovered',\n              sort: 'asc',\n              width: 200,\n            },\n            {\n              label: 'Deaths',\n              field: 'deaths',\n              sort: 'disabled',\n              width: 100,\n            },\n            {\n              label : 'Regional',\n              field : 'reg',\n              width : 50\n            }\n          ],\n        rows : CountryData.map(each =>\n          (\n            {\n            country : `${each.name}`,\n              total : `${each.today_confirmed}`,\n              active : `${each.today_open_cases}`,\n              recovered : `${each.today_recovered}`,\n              deaths : `${each.today_deaths}`,\n              reg : each.regions.length === 0 ? \"\" :   <MDBBtn tag=\"a\" size=\"sm\" floating gradient=\"aqua\" onClick={() => Namegetter(each.name)}>Go</MDBBtn>\n            }\n          ))\n    }\n    return (\n       <TableConatiner>\n           <MDBtableWrapper>\n                <MDBDataTableV5 borderless materialSearch data={dataTable} entriesOptions={[5,10]}/>\n           </MDBtableWrapper>\n           <MapWrapper>\n              <Regional CountryName={Name}/>\n           </MapWrapper>\n       </TableConatiner>\n    )\n}\n\nexport default Tables\n\nconst TableConatiner = styled.div`\ndisplay:flex;\nflex-wrap:wrap;\nflex-flow:row;\njustify-content:space-between;\nwidth:100%;\nmargin-bottom:20px;`\nconst MDBtableWrapper = styled.div`\nflex:1.1;\nbackground-color:whitesmoke;\nmargin-right:20px;\nborder-radius:0.5rem;\npadding:20px;`\nconst MapWrapper = styled.div`\nflex:1;\nborder-radius:0.5rem;`"]},"metadata":{},"sourceType":"module"}