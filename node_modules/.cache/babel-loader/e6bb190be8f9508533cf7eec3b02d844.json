{"ast":null,"code":"import _slicedToArray from\"/home/sayantan/Documents/CODE/React/cov-live/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import ReactApexChart from'react-apexcharts';import{GlobalUrl}from'../../../../axios';const LineG=({Country})=>{const _useState=useState({active:[],recovered:[],death:[]}),_useState2=_slicedToArray(_useState,2),linedata=_useState2[0],setData=_useState2[1];const FetchData=sample=>{const cases=Object.values(sample.timeline.cases);const recovered=Object.values(sample.timeline.recovered);const deaths=Object.values(sample.timeline.deaths);const RecovDiff=recovered.map((each,id)=>{return recovered[id+1]-each;}).filter((each,id)=>!!each).map(each=>Math.abs(each));const DeathsDiff=deaths.map((each,id)=>{return deaths[id+1]-each;}).filter((each,id)=>!!each).map(each=>Math.abs(each));const active=cases.map((each,id)=>each-recovered[id]-deaths[id]);const ActiveDiff=active.map((each,id)=>{return active[id+1]-each;}).filter((each,id)=>!!each).map(eaxh=>Math.abs(eaxh));setData({recovered:RecovDiff,death:DeathsDiff,active:ActiveDiff});};useEffect(()=>{GlobalUrl.get(\"/historical/india?lastdays=30\").then(resp=>{FetchData(resp.data);}).catch(err=>{console.log(err);});if(Country){const newCountry=Country!==null?Country.toLowerCase():null;GlobalUrl.get(\"/historical/\".concat(newCountry,\"?lastdays=30\")).then(resp=>{FetchData(resp.data);}).catch(err=>{console.log(err);});}},[Country]);const series=[{name:'Active',data:linedata.active},{name:'Recovered',data:linedata.recovered},{name:'Deaths',data:linedata.death}];const options={colors:['#f46527','#56CEB1','#3F6484'],chart:{type:'line',toolbar:{show:false},offsetX:0,offsetY:0,dropShadow:{enabled:true,top:0,left:0,blur:3,color:'#000',opacity:0.35}},stroke:{width:5,curve:'smooth'},grid:{strokeDashArray:3,padding:{top:0,left:-35,right:-10},xaxis:{lines:{show:false}},yaxis:{lines:{show:false}}},yaxis:{show:false},title:{text:\"30day data ^\",align:'left',offsetX:10,offsetY:10,floating:false,style:{fontSize:'15px',fontWeight:'bold',fontFamily:\"Montserrat', sans-serif\",color:'#263238'}},legend:{position:'top',offsetX:-13,offsetY:5,horizontalAlign:'left'},xaxis:{floating:true,show:false},tooltip:{enabled:false}};return/*#__PURE__*/React.createElement(ReactApexChart,{options:options,series:series,width:\"100%\",height:\"336px\",type:\"line\"});};export default LineG;","map":{"version":3,"sources":["/home/sayantan/Documents/CODE/React/cov-live/src/components/Tables&Maps/Regional Table/RegionalComponents/LineG.js"],"names":["React","useState","useEffect","ReactApexChart","GlobalUrl","LineG","Country","active","recovered","death","linedata","setData","FetchData","sample","cases","Object","values","timeline","deaths","RecovDiff","map","each","id","filter","Math","abs","DeathsDiff","ActiveDiff","eaxh","get","then","resp","data","catch","err","console","log","newCountry","toLowerCase","series","name","options","colors","chart","type","toolbar","show","offsetX","offsetY","dropShadow","enabled","top","left","blur","color","opacity","stroke","width","curve","grid","strokeDashArray","padding","right","xaxis","lines","yaxis","title","text","align","floating","style","fontSize","fontWeight","fontFamily","legend","position","horizontalAlign","tooltip"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactApexChart from 'react-apexcharts'\nimport { GlobalUrl } from '../../../../axios'\n\nconst LineG = ({Country}) => {\n    const [linedata,setData] = useState({\n        active : [],\n        recovered : [],\n        death : []\n    })\n    const FetchData = (sample) =>\n    {\n        const cases = Object.values(sample.timeline.cases)\n        const recovered = Object.values(sample.timeline.recovered)\n        const deaths = Object.values(sample.timeline.deaths) \n       const RecovDiff = recovered.map((each,id) =>\n        {\n            return recovered[id+1] - each\n        }).filter((each,id) => !! each).map(each => Math.abs(each))\n        const DeathsDiff = deaths.map((each,id) =>\n        {\n            return deaths[id+1] - each\n        }).filter((each,id) => !! each).map(each => Math.abs(each))\n        const active = cases.map((each,id) =>\n        (\n            each - recovered[id] - deaths[id]\n        ))\n        const ActiveDiff = active.map((each,id) =>\n        {\n            return active[id+1] - each\n        }).filter((each,id) => !! each).map(eaxh => Math.abs(eaxh))\n        setData({\n            recovered : RecovDiff,\n            death : DeathsDiff,\n            active : ActiveDiff\n        })\n    }\n    useEffect(() =>\n    {\n        GlobalUrl.get(`/historical/india?lastdays=30`)\n        .then(resp =>\n            {  \n               FetchData(resp.data)\n            })\n            .catch(err =>\n            {\n                console.log(err)\n            })\n        if(Country)\n        {\n            const newCountry = Country !== null ? Country.toLowerCase() : null\n            GlobalUrl.get(`/historical/${newCountry}?lastdays=30`)\n            .then(resp =>\n                {\n                    FetchData(resp.data)\n                })\n            .catch(err =>\n                {\n                    console.log(err)\n                })\n        }\n    },[Country])\n    const series = [{\n        name : 'Active',\n        data : linedata.active\n    },\n    {\n        name : 'Recovered',\n        data : linedata.recovered\n    },\n    {\n        name : 'Deaths',\n        data : linedata.death\n    }]\n    const options = {\n        colors: ['#f46527', '#56CEB1', '#3F6484'],\n        chart :{\n            type : 'line',\n            toolbar : {\n                show : false\n            },\n            offsetX : 0,\n            offsetY : 0,\n            dropShadow : {\n                enabled : true,\n                top: 0,\n                left: 0,\n                blur: 3,\n                color: '#000',\n                opacity: 0.35\n            }\n        },\n        stroke : {\n            width : 5,\n            curve : 'smooth',\n        },\n        grid:{\n            strokeDashArray : 3,\n            padding:{top:0,left:-35,right:-10},\n            xaxis:{lines:{show:false}},\n            yaxis:{lines:{show:false}}\n        },\n        yaxis:{\n            show:false\n        },\n        title : {\n            text: `30day data ^`,\n            align: 'left',\n            offsetX: 10,\n            offsetY: 10,\n            floating: false,\n            style: {\n                fontSize:  '15px',\n                fontWeight:  'bold',\n                fontFamily:  \"Montserrat', sans-serif\",\n                color:  '#263238'\n            }\n        },\n        legend :{\n            position : 'top',\n            offsetX: -13,\n            offsetY: 5,\n            horizontalAlign: 'left',\n        },\n        xaxis: {\n        floating : true,\n        show : false\n        },\n        tooltip: {\n            enabled : false\n        }, \n    }\n    return (\n      <ReactApexChart options={options} series={series}  width=\"100%\" height=\"336px\"type=\"line\"/>\n    )\n}\n\nexport default LineG\n"]},"metadata":{},"sourceType":"module"}