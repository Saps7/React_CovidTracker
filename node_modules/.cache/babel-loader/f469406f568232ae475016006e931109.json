{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sayantan/Documents/CODE/React/cov-live/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/home/sayantan/Documents/CODE/React/cov-live/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sayantan/Documents/CODE/React/cov-live/src/components/Global/GlobalData.js\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n    position:absolute;\\n    backface-visibility:hidden;\\n    color:black;\\n    width:100%;\\n    height:100%;\\n    display:flex;\\n    padding:15px;\\n    flex-direction:column;\\n    flex-wrap:wrap;\\n    justify-content:space-between;\\n    transform:rotateY(-180deg);\\n    border-radius:0.5rem;\\n    h4\\n    {\\n        font-weight: 700;\\n    }\\n    div\\n    {\\n       \\n    }\\n    \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    position:absolute;\\n    backface-visibility:hidden;\\n    padding:15px;\\n    color:black;\\n    width:100%;\\n    height:100%;\\n    display:flex;\\n    flex-direction:column;\\n    flex-wrap:wrap;\\n    justify-content:center;\\n    border-radius:0.5rem;\\n    \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    width:100%;\\n    height:100%;\\n    position:absolute;\\n    backface-visibility:hidden;\\n    transform-style:preserve-3d;\\n    transition:1s all;\\n    &:active{\\n        transform: rotateY(180deg);\\n    }\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n      perspective:1000rem;\\n      position:relative;\\n      transition:0.8s all;\\n      height:400px;\\n      width:400px;\\n      margin-bottom:20px;\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    display:flex;\\n    flex-wrap:wrap;\\n    flex-direction:row;\\n    justify-content:space-between;\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { covidURL } from '../../axios';\nimport styled from 'styled-components'; //import CardGraph from './CardGraph/CardGraph'\n\nconst GlobalData = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        GlobalInfo = _useState2[0],\n        setData = _useState2[1];\n\n  const date = \"\".concat(new Date().getFullYear(), \"-\").concat(\"0\" + (new Date().getMonth() + 1), \"-\").concat(new Date().getUTCDate());\n  useEffect(() => {\n    covidURL.get(\"/\".concat(date, \"/country/India\")).then(resp => {\n      setData(resp.data.total);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [date]);\n  const Cards = [{\n    styles: \"linear-gradient(to right, #e53935, #e35d5b)\",\n    CardFront: {\n      type: \"Total\",\n      info: GlobalInfo.today_confirmed,\n      infoRadial: GlobalInfo.today_confirmed\n    },\n    CardBack: {\n      Name1: \"Yesterday's Totals\",\n      Name2: \"YesterdayToday Ratio\",\n      YesterdayCases: GlobalInfo.yesterday_confirmed,\n      YesVStodRatio: GlobalInfo.today_vs_yesterday_confirmed,\n      SourceProvider: GlobalInfo.source,\n      UpdatedAt: GlobalInfo.updated_at\n    }\n  }, {\n    styles: \"linear-gradient(to right, #ff512f, #f09819)\",\n    CardFront: {\n      type: \"Active\",\n      info: GlobalInfo.today_open_cases,\n      infoRadial: Math.round(GlobalInfo.today_open_cases / GlobalInfo.today_confirmed * 100)\n    },\n    CardBack: {\n      Name1: \"Yesterday's Total Active\",\n      Name2: \"YesterdayToday Ratio\",\n      YesterdayCases: GlobalInfo.yesterday_open_cases,\n      YesVStodRatio: GlobalInfo.today_vs_yesterday_open_cases,\n      SourceProvider: GlobalInfo.source,\n      UpdatedAt: GlobalInfo.updated_at\n    }\n  }, {\n    styles: \"linear-gradient(to right, #4cb8c4, #3cd3ad)\",\n    CardFront: {\n      type: \"Recovered\",\n      info: GlobalInfo.today_recovered,\n      infoRadial: Math.round(GlobalInfo.today_recovered / GlobalInfo.today_confirmed * 100)\n    },\n    CardBack: {\n      Name1: \"Yesterday's Total Recovery\",\n      Name2: \"YesterdayToday Ratio\",\n      YesterdayCases: GlobalInfo.yesterday_recovered,\n      YesVStodRatio: GlobalInfo.today_vs_yesterday_recovered,\n      SourceProvider: GlobalInfo.source,\n      UpdatedAt: GlobalInfo.updated_at\n    }\n  }, {\n    styles: \"linear-gradient(to right, #606c88, #3f4c6b)\",\n    CardFront: {\n      type: \"Deaths\",\n      info: GlobalInfo.today_deaths,\n      infoRadial: Math.round(GlobalInfo.today_deaths / GlobalInfo.today_confirmed * 100)\n    },\n    CardBack: {\n      Name1: \"Yesterday's Total Deaths\",\n      Name2: \"YesterdayToday Ratio\",\n      YesterdayCases: GlobalInfo.yesterday_deaths,\n      YesVStodRatio: GlobalInfo.today_vs_yesterday_deaths,\n      SourceProvider: GlobalInfo.source,\n      UpdatedAt: GlobalInfo.updated_at\n    }\n  }];\n  const Globals = styled.div(_templateObject());\n  const Wrapper = styled.div(_templateObject2());\n  const Card = styled.div(_templateObject3());\n  const Front = styled.div(_templateObject4());\n  const Back = styled.div(_templateObject5());\n  return /*#__PURE__*/React.createElement(Globals, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, Cards.map((each, index) => /*#__PURE__*/React.createElement(Wrapper, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Front, {\n    style: {\n      background: each.styles\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Back, {\n    style: {\n      background: each.styles\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }\n  }, \"Additional Informations\"), /*#__PURE__*/React.createElement(\"div\", {\n    styled: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontSize: \"60px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 37\n    }\n  }, each.CardBack.YesterdayCases), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 37\n    }\n  }, each.CardBack.Name1), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 37\n    }\n  }, each.CardBack.YesVStodRatio), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }\n  }, each.CardBack.Name2)), /*#__PURE__*/React.createElement(\"h6\", {\n    style: {\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  }, each.CardBack.SourceProvider))))));\n};\n\nexport default GlobalData;\n/*today_confirmed\ntoday_deaths\ntoday_new_confirmed\ntoday_new_deaths\ntoday_new_open_cases\ntoday_new_recovered\ntoday_open_cases\ntoday_recovered\ntoday_vs_yesterday_confirmed\ntoday_vs_yesterday_deaths\ntoday_vs_yesterday_open_cases\ntoday_vs_yesterday_recovered\nyesterday_confirmed\nyesterday_deaths\nyesterday_open_cases\nyesterday_recovered*/","map":{"version":3,"sources":["/home/sayantan/Documents/CODE/React/cov-live/src/components/Global/GlobalData.js"],"names":["React","useEffect","useState","covidURL","styled","GlobalData","GlobalInfo","setData","date","Date","getFullYear","getMonth","getUTCDate","get","then","resp","data","total","catch","err","console","log","Cards","styles","CardFront","type","info","today_confirmed","infoRadial","CardBack","Name1","Name2","YesterdayCases","yesterday_confirmed","YesVStodRatio","today_vs_yesterday_confirmed","SourceProvider","source","UpdatedAt","updated_at","today_open_cases","Math","round","yesterday_open_cases","today_vs_yesterday_open_cases","today_recovered","yesterday_recovered","today_vs_yesterday_recovered","today_deaths","yesterday_deaths","today_vs_yesterday_deaths","Globals","div","Wrapper","Card","Front","Back","map","each","index","background","textAlign","fontSize","float"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA,oBACQH,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACdI,UADc;AAAA,QACHC,OADG;;AAErB,QAAMC,IAAI,aAAK,IAAIC,IAAJ,GAAWC,WAAX,EAAL,cAAiC,OAAO,IAAID,IAAJ,GAAWE,QAAX,KAAwB,CAA/B,CAAjC,cAAsE,IAAIF,IAAJ,GAAWG,UAAX,EAAtE,CAAV;AACAX,EAAAA,SAAS,CAAC,MACV;AACIE,IAAAA,QAAQ,CAACU,GAAT,YAAiBL,IAAjB,qBACCM,IADD,CACMC,IAAI,IACN;AACIR,MAAAA,OAAO,CAACQ,IAAI,CAACC,IAAL,CAAUC,KAAX,CAAP;AACH,KAJL,EAKCC,KALD,CAKOC,GAAG,IACN;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KARL;AASH,GAXQ,EAWP,CAACX,IAAD,CAXO,CAAT;AAYA,QAAMc,KAAK,GAAC,CACR;AACIC,IAAAA,MAAM,EAAC,6CADX;AAEIC,IAAAA,SAAS,EAAC;AACNC,MAAAA,IAAI,EAAC,OADC;AAENC,MAAAA,IAAI,EAAEpB,UAAU,CAACqB,eAFX;AAGNC,MAAAA,UAAU,EAAEtB,UAAU,CAACqB;AAHjB,KAFd;AAOIE,IAAAA,QAAQ,EAAC;AACLC,MAAAA,KAAK,EAAC,oBADD;AAELC,MAAAA,KAAK,EAAC,sBAFD;AAGLC,MAAAA,cAAc,EAAG1B,UAAU,CAAC2B,mBAHvB;AAILC,MAAAA,aAAa,EAAG5B,UAAU,CAAC6B,4BAJtB;AAKLC,MAAAA,cAAc,EAAE9B,UAAU,CAAC+B,MALtB;AAMLC,MAAAA,SAAS,EAAEhC,UAAU,CAACiC;AANjB;AAPb,GADQ,EAiBR;AACIhB,IAAAA,MAAM,EAAC,6CADX;AAEIC,IAAAA,SAAS,EAAC;AACNC,MAAAA,IAAI,EAAC,QADC;AAENC,MAAAA,IAAI,EAAEpB,UAAU,CAACkC,gBAFX;AAGNZ,MAAAA,UAAU,EAAEa,IAAI,CAACC,KAAL,CAAYpC,UAAU,CAACkC,gBAAX,GAA4BlC,UAAU,CAACqB,eAAxC,GAAyD,GAApE;AAHN,KAFd;AAOIE,IAAAA,QAAQ,EAAC;AACLC,MAAAA,KAAK,EAAC,0BADD;AAELC,MAAAA,KAAK,EAAC,sBAFD;AAGLC,MAAAA,cAAc,EAAG1B,UAAU,CAACqC,oBAHvB;AAILT,MAAAA,aAAa,EAAG5B,UAAU,CAACsC,6BAJtB;AAKLR,MAAAA,cAAc,EAAE9B,UAAU,CAAC+B,MALtB;AAMLC,MAAAA,SAAS,EAAEhC,UAAU,CAACiC;AANjB;AAPb,GAjBQ,EAiCR;AACIhB,IAAAA,MAAM,EAAC,6CADX;AAEIC,IAAAA,SAAS,EAAC;AACNC,MAAAA,IAAI,EAAC,WADC;AAENC,MAAAA,IAAI,EAAEpB,UAAU,CAACuC,eAFX;AAGNjB,MAAAA,UAAU,EAAEa,IAAI,CAACC,KAAL,CAAYpC,UAAU,CAACuC,eAAX,GAA2BvC,UAAU,CAACqB,eAAvC,GAAwD,GAAnE;AAHN,KAFd;AAOIE,IAAAA,QAAQ,EAAC;AACLC,MAAAA,KAAK,EAAC,4BADD;AAELC,MAAAA,KAAK,EAAC,sBAFD;AAGLC,MAAAA,cAAc,EAAG1B,UAAU,CAACwC,mBAHvB;AAILZ,MAAAA,aAAa,EAAG5B,UAAU,CAACyC,4BAJtB;AAKLX,MAAAA,cAAc,EAAE9B,UAAU,CAAC+B,MALtB;AAMLC,MAAAA,SAAS,EAAEhC,UAAU,CAACiC;AANjB;AAPb,GAjCQ,EAiDR;AACIhB,IAAAA,MAAM,EAAC,6CADX;AAEIC,IAAAA,SAAS,EAAC;AACNC,MAAAA,IAAI,EAAC,QADC;AAENC,MAAAA,IAAI,EAAEpB,UAAU,CAAC0C,YAFX;AAGNpB,MAAAA,UAAU,EAAEa,IAAI,CAACC,KAAL,CAAYpC,UAAU,CAAC0C,YAAX,GAAwB1C,UAAU,CAACqB,eAApC,GAAqD,GAAhE;AAHN,KAFd;AAOIE,IAAAA,QAAQ,EAAC;AACLC,MAAAA,KAAK,EAAC,0BADD;AAELC,MAAAA,KAAK,EAAC,sBAFD;AAGLC,MAAAA,cAAc,EAAG1B,UAAU,CAAC2C,gBAHvB;AAILf,MAAAA,aAAa,EAAG5B,UAAU,CAAC4C,yBAJtB;AAKLd,MAAAA,cAAc,EAAE9B,UAAU,CAAC+B,MALtB;AAMLC,MAAAA,SAAS,EAAEhC,UAAU,CAACiC;AANjB;AAPb,GAjDQ,CAAZ;AAkEA,QAAMY,OAAO,GAAG/C,MAAM,CAACgD,GAAV,mBAAb;AAMA,QAAMC,OAAO,GAAEjD,MAAM,CAACgD,GAAT,oBAAb;AAQA,QAAME,IAAI,GAAElD,MAAM,CAACgD,GAAT,oBAAV;AAWA,QAAMG,KAAK,GAAGnD,MAAM,CAACgD,GAAV,oBAAX;AAcA,QAAMI,IAAI,GAAGpD,MAAM,CAACgD,GAAV,oBAAV;AAsBA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ9B,KAAK,CAACmC,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,kBAGN,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAACF,IAAI,CAACnC;AAAjB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACqC,MAAAA,UAAU,EAACF,IAAI,CAACnC;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI;AAAK,IAAA,MAAM,EAAE;AAACsC,MAAAA,SAAS,EAAC;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EACL;AACxCC,MAAAA,QAAQ,EAAC;AAD+B,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKJ,IAAI,CAAC7B,QAAL,CAAcG,cAHnB,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM0B,IAAI,CAAC7B,QAAL,CAAcC,KAApB,CANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK4B,IAAI,CAAC7B,QAAL,CAAcK,aAAnB,CAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMwB,IAAI,CAAC7B,QAAL,CAAcE,KAApB,CARJ,CAFJ,eAYI;AAAI,IAAA,KAAK,EAAE;AAACgC,MAAAA,KAAK,EAAC;AAAP,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BL,IAAI,CAAC7B,QAAL,CAAcO,cAA3C,CAZJ,CAPJ,CADJ,CAHJ,CAFR,CADJ;AAkCH,CAhLD;;AAkLA,eAAe/B,UAAf;AACA","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { covidURL } from '../../axios'\nimport styled from 'styled-components'\n//import CardGraph from './CardGraph/CardGraph'\n\nconst GlobalData = () => {\n    const [GlobalInfo,setData] = useState([])\n    const date =`${new Date().getFullYear()}-${\"0\" + (new Date().getMonth() + 1)}-${new Date().getUTCDate()}`\n    useEffect(() =>\n    {\n        covidURL.get(`/${date}/country/India`)\n        .then(resp =>\n            {\n                setData(resp.data.total)\n            })\n        .catch(err =>\n            {\n                console.log(err)\n            })\n    },[date])\n    const Cards=[\n        {\n            styles:\"linear-gradient(to right, #e53935, #e35d5b)\",\n            CardFront:{\n                type:\"Total\",\n                info: GlobalInfo.today_confirmed,\n                infoRadial: GlobalInfo.today_confirmed\n            },\n            CardBack:{\n                Name1:\"Yesterday's Totals\",\n                Name2:\"YesterdayToday Ratio\",\n                YesterdayCases : GlobalInfo.yesterday_confirmed,\n                YesVStodRatio : GlobalInfo.today_vs_yesterday_confirmed,\n                SourceProvider: GlobalInfo.source,\n                UpdatedAt: GlobalInfo.updated_at \n            }\n        },\n        {\n            styles:\"linear-gradient(to right, #ff512f, #f09819)\",\n            CardFront:{\n                type:\"Active\",\n                info: GlobalInfo.today_open_cases,\n                infoRadial: Math.round((GlobalInfo.today_open_cases/GlobalInfo.today_confirmed)*100)\n            },\n            CardBack:{\n                Name1:\"Yesterday's Total Active\", \n                Name2:\"YesterdayToday Ratio\",\n                YesterdayCases : GlobalInfo.yesterday_open_cases,\n                YesVStodRatio : GlobalInfo.today_vs_yesterday_open_cases,\n                SourceProvider: GlobalInfo.source,\n                UpdatedAt: GlobalInfo.updated_at \n            }\n        },\n        {\n            styles:\"linear-gradient(to right, #4cb8c4, #3cd3ad)\",\n            CardFront:{\n                type:\"Recovered\",\n                info: GlobalInfo.today_recovered,\n                infoRadial: Math.round((GlobalInfo.today_recovered/GlobalInfo.today_confirmed)*100)\n            },\n            CardBack:{\n                Name1:\"Yesterday's Total Recovery\",\n                Name2:\"YesterdayToday Ratio\",\n                YesterdayCases : GlobalInfo.yesterday_recovered,\n                YesVStodRatio : GlobalInfo.today_vs_yesterday_recovered,\n                SourceProvider: GlobalInfo.source,\n                UpdatedAt: GlobalInfo.updated_at \n            }\n        },\n        {\n            styles:\"linear-gradient(to right, #606c88, #3f4c6b)\",\n            CardFront:{\n                type:\"Deaths\",\n                info: GlobalInfo.today_deaths,\n                infoRadial: Math.round((GlobalInfo.today_deaths/GlobalInfo.today_confirmed)*100)\n            },\n            CardBack:{\n                Name1:\"Yesterday's Total Deaths\",\n                Name2:\"YesterdayToday Ratio\",\n                YesterdayCases : GlobalInfo.yesterday_deaths,\n                YesVStodRatio : GlobalInfo.today_vs_yesterday_deaths,\n                SourceProvider: GlobalInfo.source,\n                UpdatedAt: GlobalInfo.updated_at  \n            }\n        }\n    ]\n    const Globals = styled.div`\n    display:flex;\n    flex-wrap:wrap;\n    flex-direction:row;\n    justify-content:space-between;\n    `\n    const Wrapper= styled.div`\n      perspective:1000rem;\n      position:relative;\n      transition:0.8s all;\n      height:400px;\n      width:400px;\n      margin-bottom:20px;\n    `\n    const Card= styled.div`\n    width:100%;\n    height:100%;\n    position:absolute;\n    backface-visibility:hidden;\n    transform-style:preserve-3d;\n    transition:1s all;\n    &:active{\n        transform: rotateY(180deg);\n    }\n    `\n    const Front = styled.div`\n    position:absolute;\n    backface-visibility:hidden;\n    padding:15px;\n    color:black;\n    width:100%;\n    height:100%;\n    display:flex;\n    flex-direction:column;\n    flex-wrap:wrap;\n    justify-content:center;\n    border-radius:0.5rem;\n    `\n\n    const Back = styled.div`\n    position:absolute;\n    backface-visibility:hidden;\n    color:black;\n    width:100%;\n    height:100%;\n    display:flex;\n    padding:15px;\n    flex-direction:column;\n    flex-wrap:wrap;\n    justify-content:space-between;\n    transform:rotateY(-180deg);\n    border-radius:0.5rem;\n    h4\n    {\n        font-weight: 700;\n    }\n    div\n    {\n       \n    }\n    `\n    return (\n        <Globals>\n            {   \n                Cards.map((each,index) =>\n                (   \n                    \n                    <Wrapper key={index}>\n                        <Card>\n                            <Front style={{background:each.styles}}>\n                                {/*<CardGraph \n                                Infos={each.CardFront.info} \n                                Labels={each.CardFront.type} \n                                chartRadial={each.CardFront.infoRadial}/>*/}\n                            </Front>\n                            <Back style={{background:each.styles}}>\n                                <h4>Additional Informations</h4>\n                                <div styled={{textAlign:\"center\"}}>\n                                    <h4 style={\n                                        {\nfontSize:\"60px\"}}>\n                                        {each.CardBack.YesterdayCases}                             \n                                    </h4>\n                                    <div>{each.CardBack.Name1}</div>\n                                    <h4>{each.CardBack.YesVStodRatio}</h4>\n                                    <div>{each.CardBack.Name2}</div>\n                                </div>\n                                <h6 style={{float:\"right\"}}>{each.CardBack.SourceProvider}</h6>\n                            </Back>\n                        </Card>\n                    </Wrapper>\n                ))\n            }\n        </Globals>\n    )\n}\n\nexport default GlobalData\n/*today_confirmed\ntoday_deaths\ntoday_new_confirmed\ntoday_new_deaths\ntoday_new_open_cases\ntoday_new_recovered\ntoday_open_cases\ntoday_recovered\ntoday_vs_yesterday_confirmed\ntoday_vs_yesterday_deaths\ntoday_vs_yesterday_open_cases\ntoday_vs_yesterday_recovered\nyesterday_confirmed\nyesterday_deaths\nyesterday_open_cases\nyesterday_recovered*/"]},"metadata":{},"sourceType":"module"}