{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sayantan/Documents/CODE/React/cov-live/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/home/sayantan/Documents/CODE/React/cov-live/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sayantan/Documents/CODE/React/cov-live/src/components/Tables&Maps/Tables.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\nflex:1;\\nbackground-color:yellow;\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\nflex:1.1;\\nbackground-color:pink;\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\ndisplay:flex;\\nflex-wrap:wrap;\\nflex-flow:row;\\njustify-content:space-between;\\nwidth:100%;\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { covidURL } from '../../axios';\nimport styled from 'styled-components';\nimport { MDBDataTableV5, MDBTable } from 'mdbreact';\n\nconst Tables = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        CountryData = _useState2[0],\n        setCdata = _useState2[1];\n\n  const date = \"\".concat(new Date().getFullYear(), \"-\").concat(\"0\" + (new Date().getMonth() + 1), \"-\").concat(new Date().getUTCDate());\n  useEffect(() => {\n    covidURL.get(\"/\".concat(date)).then(resp => {\n      setCdata(Object.values(resp.data.dates[\"\".concat(date)].countries));\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [date]);\n\n  const _useState3 = useState({\n    coulmns: [{\n      label: 'Country',\n      field: 'country',\n      width: 150,\n      attributes: {\n        'aria-controls': 'DataTable',\n        'aria-label': 'Country'\n      }\n    }, {\n      label: 'Total Cases',\n      field: 'total',\n      sort: 'asc',\n      width: 200\n    }, {\n      label: 'Active',\n      field: 'active',\n      width: 200,\n      sort: 'asc'\n    }, {\n      label: 'Recovered',\n      field: 'recov',\n      sort: 'asc',\n      width: 200\n    }, {\n      label: 'Deaths',\n      field: 'deaths',\n      width: 150,\n      sort: 'asc'\n    }],\n    rows: [CountryData.map(each => ({\n      country: \"\".concat(each.name),\n      total: \"\".concat(each.today_confirmed),\n      active: \"\".concat(each.today_open_cases),\n      recov: \"\".concat(each.today_recovered),\n      deaths: \"\".concat(each.today_deaths)\n    }))]\n  }),\n        _useState4 = _slicedToArray(_useState3, 1),\n        dataTable = _useState4[0];\n\n  console.log(dataTable);\n  return /*#__PURE__*/React.createElement(TableConatiner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(MDBtableWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(MDBDataTableV5, {\n    borderless: true,\n    materialSearch: true,\n    data: dataTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MDBTable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(MapWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport default Tables;\nconst TableConatiner = styled.div(_templateObject());\nconst MDBtableWrapper = styled.div(_templateObject2());\nconst MapWrapper = styled.div(_templateObject3());\n/* country: each.name,\n                total: each.today_confirmed,\n                active: each.today_open_cases,\n                recov : each.today_recovered,\n                deaths: each.today_deaths*/","map":{"version":3,"sources":["/home/sayantan/Documents/CODE/React/cov-live/src/components/Tables&Maps/Tables.js"],"names":["React","useState","useEffect","covidURL","styled","MDBDataTableV5","MDBTable","Tables","CountryData","setCdata","date","Date","getFullYear","getMonth","getUTCDate","get","then","resp","Object","values","data","dates","countries","catch","err","console","log","coulmns","label","field","width","attributes","sort","rows","map","each","country","name","total","today_confirmed","active","today_open_cases","recov","today_recovered","deaths","today_deaths","dataTable","TableConatiner","div","MDBtableWrapper","MapWrapper"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { covidURL } from '../../axios'\nimport styled from 'styled-components'\nimport { MDBDataTableV5, MDBTable } from 'mdbreact'\n\nconst Tables = () => {\n    const [CountryData,setCdata] = useState([])\n    const date =`${new Date().getFullYear()}-${\"0\" + (new Date().getMonth() + 1)}-${new Date().getUTCDate()}`\n    useEffect(() =>\n    {\n        covidURL.get(`/${date}`)\n        .then(resp =>\n            {\n                setCdata(Object.values(resp.data.dates[`${date}`].countries))\n            })\n        .catch(err =>\n            {\n                console.log(err)\n            })\n    },[date])\n    const [dataTable] = useState({\n        coulmns:[\n            {\n                label: 'Country',\n                field: 'country',\n                width: 150,\n                attributes: {\n                  'aria-controls': 'DataTable',\n                  'aria-label': 'Country',\n                },\n              },\n              {\n                label: 'Total Cases',\n                field: 'total',\n                sort: 'asc',\n                width: 200,\n              },\n              {\n                label: 'Active',\n                field: 'active',\n                width: 200,\n                sort: 'asc'\n              },\n              {\n                label: 'Recovered',\n                field: 'recov',\n                sort: 'asc',\n                width: 200,\n              },\n              {\n                label: 'Deaths',\n                field: 'deaths',\n                width: 150,\n                sort: 'asc'\n              }\n        ],\n        rows :[ CountryData.map((each) =>\n        (\n            {\n                country: `${each.name}`,\n                total: `${each.today_confirmed}`,\n                active: `${each.today_open_cases}`,\n                recov : `${each.today_recovered}`,\n                deaths: `${each.today_deaths}`\n            }\n        ))]\n    })\n    console.log(dataTable)\n    return (\n       <TableConatiner>\n           <MDBtableWrapper>\n                <MDBDataTableV5 borderless materialSearch data={dataTable}/>\n                <MDBTable />\n           </MDBtableWrapper>\n           <MapWrapper>\n\n           </MapWrapper>\n       </TableConatiner>\n    )\n}\n\nexport default Tables\n\nconst TableConatiner = styled.div`\ndisplay:flex;\nflex-wrap:wrap;\nflex-flow:row;\njustify-content:space-between;\nwidth:100%;`\nconst MDBtableWrapper = styled.div`\nflex:1.1;\nbackground-color:pink;`\nconst MapWrapper = styled.div`\nflex:1;\nbackground-color:yellow;`\n\n\n/* country: each.name,\n                total: each.today_confirmed,\n                active: each.today_open_cases,\n                recov : each.today_recovered,\n                deaths: each.today_deaths*/"]},"metadata":{},"sourceType":"module"}