{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sayantan/Documents/CODE/React/cov-live/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/home/sayantan/Documents/CODE/React/cov-live/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sayantan/Documents/CODE/React/cov-live/src/components/Global/GlobalData.js\";\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\n    text-align:justify;\\n    padding:10px;\\n    border-radius:0.5rem;\\n    background:rgba(255, 255, 255, 0.3);\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n    position:absolute;\\n    backface-visibility:hidden;\\n    color:black;\\n    width:100%;\\n    height:100%;\\n    display:flex;\\n    padding:15px;\\n    flex-direction:column;\\n    flex-wrap:wrap;\\n    justify-content:space-between;\\n    text-align:center;\\n    transform:rotateY(-180deg);\\n    border-radius:0.5rem;\\n    h4\\n    {\\n        font-weight: 500;\\n    }\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    position:absolute;\\n    backface-visibility:hidden;\\n    padding:15px;\\n    color:black;\\n    width:100%;\\n    height:100%;\\n    display:flex;\\n    flex-direction:column;\\n    flex-wrap:wrap;\\n    justify-content:center;\\n    border-radius:0.5rem;\\n    transform:rotateY(0deg);\\n    \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    width:100%;\\n    height:100%;\\n    position:absolute;\\n    backface-visibility:hidden;\\n    transform-style:preserve-3d;\\n    transition:1s all;\\n    &:active{\\n        transform: rotateY(180deg);\\n    }\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n      position:relative;\\n      transition:0.8s all;\\n      height:400px;\\n      width:400px;\\n      margin-bottom:20px;\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    display:flex;\\n    flex-wrap:wrap;\\n    flex-direction:row;\\n    justify-content:space-between;\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { GlobalUrl } from '../../axios';\nimport styled from 'styled-components';\nimport AreaChartCard from './CardGraph/AreaChartCard';\n\nconst GlobalData = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        GlobalInfo = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState({\n    Cases: [],\n    Recovered: [],\n    Deaths: [],\n    Actives: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        Historical = _useState4[0],\n        setHistory = _useState4[1]; //const date =`${new Date().getFullYear()}-${\"0\" + (new Date().getMonth() + 1)}-${new Date().getUTCDate()}`\n\n\n  useEffect(() => {\n    GlobalUrl.get(\"/all\").then(resp => {\n      setData(resp.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  useEffect(() => {\n    GlobalUrl.get('/historical/all').then(resp => {\n      const cases = Object.values(resp.data.cases);\n      const recovered = Object.values(resp.data.recovered);\n      const deaths = Object.values(resp.data.deaths);\n      const actives = cases.map((each, id) => {\n        return each - recovered[id];\n      }).map((each, id) => {\n        return each - deaths[id];\n      });\n      setHistory({\n        Cases: cases,\n        Recovered: recovered,\n        Deaths: deaths,\n        Actives: actives\n      });\n    }).then(err => {\n      console.log(err);\n    });\n  }, []);\n  const Cards = [{\n    styles: \"linear-gradient(to right, #e53935, #e35d5b)\",\n    CardFront: {\n      type: \"Total\",\n      RadialData: GlobalInfo.cases,\n      HistoryData: Historical.Cases\n    },\n    CardBack: {\n      affc: \"Affected Countries.\",\n      affectedCountries: GlobalInfo.affectedCountries,\n      type: \"Cases per million\",\n      PerOneMillion: GlobalInfo.casesPerOneMillion,\n      tN: \"Total tests\",\n      ts: GlobalInfo.tests,\n      tPM: \"Tests per million\",\n      tPerOneMillion: GlobalInfo.testsPerOneMillion\n    }\n  }, {\n    styles: \"linear-gradient(to right, #ff512f, #f09819)\",\n    CardFront: {\n      type: \"Active\",\n      RadialData: GlobalInfo.cases,\n      HistoryData: Historical.Actives\n    },\n    CardBack: {\n      type: \"Active per million\",\n      PerOneMillion: GlobalInfo.activePerOneMillion,\n      tN: \"Critical Cases\",\n      ts: GlobalInfo.critical,\n      tPM: \"Critical per million\",\n      tPerOneMillion: GlobalInfo.criticalPerOneMillion\n    }\n  }, {\n    styles: \"linear-gradient(to right, #4cb8c4, #3cd3ad)\",\n    CardFront: {\n      type: \"Recovered\",\n      RadialData: GlobalInfo.recovered,\n      HistoryData: Historical.Recovered\n    },\n    CardBack: {\n      type: \"Recovered per million\",\n      PerOneMillion: GlobalInfo.recoveredPerOneMillion\n    }\n  }, {\n    styles: \"linear-gradient(to right, #606c88, #3f4c6b)\",\n    CardFront: {\n      type: \"Deaths\",\n      RadialInfo: GlobalInfo.deaths,\n      HistoryData: Historical.Cases\n    },\n    CardBack: {\n      type: \"Deaths per million\",\n      PerOneMillion: GlobalInfo.deathsPerOneMillion\n    }\n  }];\n  const Globals = styled.div(_templateObject());\n  const Wrapper = styled.div(_templateObject2());\n  const Card = styled.div(_templateObject3());\n  const Front = styled.div(_templateObject4());\n  const Back = styled.div(_templateObject5());\n  const CardBackInfos = styled.div(_templateObject6());\n  return /*#__PURE__*/React.createElement(Globals, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, Cards.map((each, index) => /*#__PURE__*/React.createElement(Wrapper, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Front, {\n    style: {\n      background: each.styles\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AreaChartCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Back, {\n    style: {\n      background: each.styles\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 32\n    }\n  }, \"Aditional Infos\"), /*#__PURE__*/React.createElement(CardBackInfos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 37\n    }\n  }, each.CardBack.type), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 37\n    }\n  }, each.CardBack.PerOneMillion), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 37\n    }\n  }, each.CardBack.affc), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 37\n    }\n  }, each.CardBack.affectedCountries), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 37\n    }\n  }, each.CardBack.tN), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 37\n    }\n  }, each.CardBack.ts), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 37\n    }\n  }, each.CardBack.tPM), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }\n  }, each.CardBack.tPerOneMillion)), /*#__PURE__*/React.createElement(\"h6\", {\n    style: {\n      opacity: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 32\n    }\n  }, \"CovidApi.all\"))))));\n};\n\nexport default GlobalData;","map":{"version":3,"sources":["/home/sayantan/Documents/CODE/React/cov-live/src/components/Global/GlobalData.js"],"names":["React","useEffect","useState","GlobalUrl","styled","AreaChartCard","GlobalData","GlobalInfo","setData","Cases","Recovered","Deaths","Actives","Historical","setHistory","get","then","resp","data","catch","err","console","log","cases","Object","values","recovered","deaths","actives","map","each","id","Cards","styles","CardFront","type","RadialData","HistoryData","CardBack","affc","affectedCountries","PerOneMillion","casesPerOneMillion","tN","ts","tests","tPM","tPerOneMillion","testsPerOneMillion","activePerOneMillion","critical","criticalPerOneMillion","recoveredPerOneMillion","RadialInfo","deathsPerOneMillion","Globals","div","Wrapper","Card","Front","Back","CardBackInfos","index","background","opacity"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { GlobalUrl } from '../../axios'\nimport styled from 'styled-components'\nimport AreaChartCard from './CardGraph/AreaChartCard'\n\nconst GlobalData = () => {\n    const [GlobalInfo,setData] = useState([])\n    const [Historical,setHistory] = useState(\n        {\n            Cases : [],\n            Recovered : [],\n            Deaths : [],\n            Actives : []\n        }\n    )\n    //const date =`${new Date().getFullYear()}-${\"0\" + (new Date().getMonth() + 1)}-${new Date().getUTCDate()}`\n    useEffect(() =>\n    {\n        GlobalUrl.get(`/all`)\n        .then(resp =>\n            {\n                setData(resp.data)\n            })\n        .catch(err =>\n            {\n                console.log(err)\n            })\n    },[])\n    useEffect(() =>\n    {\n        GlobalUrl.get('/historical/all')\n        .then(resp =>\n            {\n                const cases = Object.values(resp.data.cases);\n                const recovered = Object.values(resp.data.recovered);\n                const deaths =  Object.values(resp.data.deaths);\n                const actives = cases.map((each,id) =>\n                {\n                    return each - recovered[id]\n                }).map((each,id) =>\n                {\n                    return each - deaths[id]\n                })\n                setHistory(\n                    {\n                        Cases : cases,\n                        Recovered : recovered,\n                        Deaths : deaths,\n                        Actives : actives\n                    }\n                )\n            })\n        .then(err =>\n            {\n                console.log(err);\n            })\n    },[])\n    const Cards=[\n        {\n            styles:\"linear-gradient(to right, #e53935, #e35d5b)\",\n            CardFront:{\n                type:\"Total\",\n                RadialData:GlobalInfo.cases,\n                HistoryData : Historical.Cases\n                \n            },\n            CardBack:{\n                affc:\"Affected Countries.\",\n                affectedCountries:GlobalInfo.affectedCountries,\n                type:\"Cases per million\",\n                PerOneMillion: GlobalInfo.casesPerOneMillion,\n                tN:\"Total tests\",\n                ts:GlobalInfo.tests,\n                tPM:\"Tests per million\",\n                tPerOneMillion:GlobalInfo.testsPerOneMillion\n            }\n        },\n        {\n            styles:\"linear-gradient(to right, #ff512f, #f09819)\",\n            CardFront:{\n                type:\"Active\",\n                RadialData:GlobalInfo.cases,\n                HistoryData : Historical.Actives\n            },\n            CardBack:{\n                type:\"Active per million\",\n                PerOneMillion:GlobalInfo.activePerOneMillion,\n                tN:\"Critical Cases\",\n                ts:GlobalInfo.critical,\n                tPM:\"Critical per million\",\n                tPerOneMillion:GlobalInfo.criticalPerOneMillion,\n            }\n        },\n        {\n            styles:\"linear-gradient(to right, #4cb8c4, #3cd3ad)\",\n            CardFront:{\n                type:\"Recovered\",\n                RadialData:GlobalInfo.recovered,\n                HistoryData : Historical.Recovered\n                \n            },\n            CardBack:{\n               type:\"Recovered per million\",\n               PerOneMillion:GlobalInfo.recoveredPerOneMillion\n            }\n        },\n        {\n            styles:\"linear-gradient(to right, #606c88, #3f4c6b)\",\n            CardFront:{\n                type:\"Deaths\",\n                RadialInfo:GlobalInfo.deaths,\n                HistoryData : Historical.Cases\n          \n            },\n            CardBack:{\n               type:\"Deaths per million\",\n               PerOneMillion:GlobalInfo.deathsPerOneMillion\n            }\n        }\n    ]\n    const Globals = styled.div`\n    display:flex;\n    flex-wrap:wrap;\n    flex-direction:row;\n    justify-content:space-between;\n    `\n    const Wrapper= styled.div`\n      position:relative;\n      transition:0.8s all;\n      height:400px;\n      width:400px;\n      margin-bottom:20px;\n    `\n    const Card= styled.div`\n    width:100%;\n    height:100%;\n    position:absolute;\n    backface-visibility:hidden;\n    transform-style:preserve-3d;\n    transition:1s all;\n    &:active{\n        transform: rotateY(180deg);\n    }\n    `\n    const Front = styled.div`\n    position:absolute;\n    backface-visibility:hidden;\n    padding:15px;\n    color:black;\n    width:100%;\n    height:100%;\n    display:flex;\n    flex-direction:column;\n    flex-wrap:wrap;\n    justify-content:center;\n    border-radius:0.5rem;\n    transform:rotateY(0deg);\n    `\n\n    const Back = styled.div`\n    position:absolute;\n    backface-visibility:hidden;\n    color:black;\n    width:100%;\n    height:100%;\n    display:flex;\n    padding:15px;\n    flex-direction:column;\n    flex-wrap:wrap;\n    justify-content:space-between;\n    text-align:center;\n    transform:rotateY(-180deg);\n    border-radius:0.5rem;\n    h4\n    {\n        font-weight: 500;\n    }`\n    const CardBackInfos = styled.div`\n    text-align:justify;\n    padding:10px;\n    border-radius:0.5rem;\n    background:rgba(255, 255, 255, 0.3);`\n    return (\n        <Globals>\n            {   \n                Cards.map((each,index) =>\n                (   \n                    \n                    <Wrapper key={index}>\n                        <Card>\n                            <Front style={{background:each.styles}}>\n                                <AreaChartCard />\n                            </Front>\n                            <Back style={{background:each.styles}}>\n                               <h4>Aditional Infos</h4>\n                                <CardBackInfos>\n                                    <h3>{each.CardBack.type}</h3>\n                                    <div>{each.CardBack.PerOneMillion}</div>\n                                    <h3>{each.CardBack.affc}</h3>\n                                    <div>{each.CardBack.affectedCountries}</div>\n                                    <h3>{each.CardBack.tN}</h3>\n                                    <div>{each.CardBack.ts}</div>\n                                    <h3>{each.CardBack.tPM}</h3>\n                                    <div>{each.CardBack.tPerOneMillion}</div>\n                                </CardBackInfos>\n                               <h6 style={{opacity:0.5}}>CovidApi.all</h6>\n                            </Back>\n                        </Card>\n                    </Wrapper>\n                ))\n            }\n        </Globals>\n    )\n}\n\nexport default GlobalData\n"]},"metadata":{},"sourceType":"module"}