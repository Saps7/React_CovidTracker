{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sayantan/Documents/CODE/React/cov-live/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/home/sayantan/Documents/CODE/React/cov-live/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sayantan/Documents/CODE/React/cov-live/src/components/Global/GlobalData.js\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n    position:absolute;\\n    backface-visibility:hidden;\\n    color:black;\\n    width:100%;\\n    height:100%;\\n    display:flex;\\n    padding:15px;\\n    flex-direction:column;\\n    flex-wrap:wrap;\\n    justify-content:space-between;\\n    text-align:center;\\n    transform:rotateY(-180deg);\\n    border-radius:0.5rem;\\n    h4\\n    {\\n        font-weight: 700;\\n    }\\n    div\\n    {\\n       \\n    }\\n    \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    position:absolute;\\n    backface-visibility:hidden;\\n    padding:15px;\\n    color:black;\\n    width:100%;\\n    height:100%;\\n    display:flex;\\n    flex-direction:column;\\n    flex-wrap:wrap;\\n    justify-content:center;\\n    border-radius:0.5rem;\\n    \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    width:100%;\\n    height:100%;\\n    position:absolute;\\n    backface-visibility:hidden;\\n    transform-style:preserve-3d;\\n    transition:1s all;\\n    &:active{\\n        transform: rotateY(180deg);\\n    }\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n      perspective:1000rem;\\n      position:relative;\\n      transition:0.8s all;\\n      height:400px;\\n      width:400px;\\n      margin-bottom:20px;\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    display:flex;\\n    flex-wrap:wrap;\\n    flex-direction:row;\\n    justify-content:space-between;\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { GlobalUrl } from '../../axios';\nimport styled from 'styled-components'; //import CardGraph from './CardGraph/CardGraph'\n\nconst GlobalData = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        GlobalInfo = _useState2[0],\n        setData = _useState2[1];\n\n  const date = \"\".concat(new Date().getFullYear(), \"-\").concat(\"0\" + (new Date().getMonth() + 1), \"-\").concat(new Date().getUTCDate());\n  useEffect(() => {\n    GlobalUrl.get(\"\").then(resp => {\n      setData(resp.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [date]);\n  const Cards = [{\n    styles: \"linear-gradient(to right, #e53935, #e35d5b)\",\n    CardFront: {\n      type: \"Total\"\n    },\n    CardBack: {\n      affc: \"Affected Countries.\",\n      affectedCountries: GlobalInfo.affectedCountries,\n      type: \"Cases per million\",\n      PerOneMillion: GlobalInfo.casesPerOneMillion,\n      tests: \"Total tests\",\n      testsPerOneMillion\n    }\n  }, {\n    styles: \"linear-gradient(to right, #ff512f, #f09819)\",\n    CardFront: {\n      type: \"Active\"\n    },\n    CardBack: {\n      type: \"Active per million\",\n      PerOneMillion: GlobalInfo.activePerOneMillion,\n      Criti: \"Critical Cases\",\n      critical: GlobalInfo.critical,\n      Critipm: \"Critical per million\",\n      criticalPerOneMillion: GlobalInfo.criticalPerOneMillion\n    }\n  }, {\n    styles: \"linear-gradient(to right, #4cb8c4, #3cd3ad)\",\n    CardFront: {\n      type: \"Recovered\"\n    },\n    CardBack: {\n      type: \"Recovered per million\",\n      PerOneMillion: GlobalInfo.recoveredPerOneMillion\n    }\n  }, {\n    styles: \"linear-gradient(to right, #606c88, #3f4c6b)\",\n    CardFront: {\n      type: \"Deaths\"\n    },\n    CardBack: {\n      type: \"Deaths per million\",\n      PerOneMillion: GlobalInfo.deathsPerOneMillion\n    }\n  }];\n  const Globals = styled.div(_templateObject());\n  const Wrapper = styled.div(_templateObject2());\n  const Card = styled.div(_templateObject3());\n  const Front = styled.div(_templateObject4());\n  const Back = styled.div(_templateObject5());\n  return /*#__PURE__*/React.createElement(Globals, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, Cards.map((each, index) => /*#__PURE__*/React.createElement(Wrapper, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Front, {\n    style: {\n      background: each.styles\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Back, {\n    style: {\n      background: each.styles\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 32\n    }\n  }, \"Aditional Infos\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"justify\",\n      background: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 37\n    }\n  }, each.CardBack.type), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 37\n    }\n  }, each.CardBack.PerOneMillion)))))));\n};\n\nexport default GlobalData;","map":{"version":3,"sources":["/home/sayantan/Documents/CODE/React/cov-live/src/components/Global/GlobalData.js"],"names":["React","useEffect","useState","GlobalUrl","styled","GlobalData","GlobalInfo","setData","date","Date","getFullYear","getMonth","getUTCDate","get","then","resp","data","catch","err","console","log","Cards","styles","CardFront","type","CardBack","affc","affectedCountries","PerOneMillion","casesPerOneMillion","tests","testsPerOneMillion","activePerOneMillion","Criti","critical","Critipm","criticalPerOneMillion","recoveredPerOneMillion","deathsPerOneMillion","Globals","div","Wrapper","Card","Front","Back","map","each","index","background","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { GlobalUrl } from '../../axios'\nimport styled from 'styled-components'\n//import CardGraph from './CardGraph/CardGraph'\n\nconst GlobalData = () => {\n    const [GlobalInfo,setData] = useState([])\n    const date =`${new Date().getFullYear()}-${\"0\" + (new Date().getMonth() + 1)}-${new Date().getUTCDate()}`\n    useEffect(() =>\n    {\n        GlobalUrl.get(``)\n        .then(resp =>\n            {\n                setData(resp.data)\n            })\n        .catch(err =>\n            {\n                console.log(err)\n            })\n    },[date])\n    const Cards=[\n        {\n            styles:\"linear-gradient(to right, #e53935, #e35d5b)\",\n            CardFront:{\n                type:\"Total\"\n            },\n            CardBack:{\n                affc:\"Affected Countries.\",\n                affectedCountries:GlobalInfo.affectedCountries,\n                type:\"Cases per million\",\n                PerOneMillion: GlobalInfo.casesPerOneMillion,\n                tests:\"Total tests\",\n                \n                testsPerOneMillion\n            }\n        },\n        {\n            styles:\"linear-gradient(to right, #ff512f, #f09819)\",\n            CardFront:{\n                type:\"Active\",\n            },\n            CardBack:{\n                type:\"Active per million\",\n                PerOneMillion:GlobalInfo.activePerOneMillion,\n                Criti:\"Critical Cases\",\n                critical:GlobalInfo.critical,\n                Critipm:\"Critical per million\",\n                criticalPerOneMillion:GlobalInfo.criticalPerOneMillion,\n            }\n        },\n        {\n            styles:\"linear-gradient(to right, #4cb8c4, #3cd3ad)\",\n            CardFront:{\n                type:\"Recovered\",\n                \n            },\n            CardBack:{\n               type:\"Recovered per million\",\n               PerOneMillion:GlobalInfo.recoveredPerOneMillion\n            }\n        },\n        {\n            styles:\"linear-gradient(to right, #606c88, #3f4c6b)\",\n            CardFront:{\n                type:\"Deaths\",\n          \n            },\n            CardBack:{\n               type:\"Deaths per million\",\n               PerOneMillion:GlobalInfo.deathsPerOneMillion\n            }\n        }\n    ]\n    const Globals = styled.div`\n    display:flex;\n    flex-wrap:wrap;\n    flex-direction:row;\n    justify-content:space-between;\n    `\n    const Wrapper= styled.div`\n      perspective:1000rem;\n      position:relative;\n      transition:0.8s all;\n      height:400px;\n      width:400px;\n      margin-bottom:20px;\n    `\n    const Card= styled.div`\n    width:100%;\n    height:100%;\n    position:absolute;\n    backface-visibility:hidden;\n    transform-style:preserve-3d;\n    transition:1s all;\n    &:active{\n        transform: rotateY(180deg);\n    }\n    `\n    const Front = styled.div`\n    position:absolute;\n    backface-visibility:hidden;\n    padding:15px;\n    color:black;\n    width:100%;\n    height:100%;\n    display:flex;\n    flex-direction:column;\n    flex-wrap:wrap;\n    justify-content:center;\n    border-radius:0.5rem;\n    `\n\n    const Back = styled.div`\n    position:absolute;\n    backface-visibility:hidden;\n    color:black;\n    width:100%;\n    height:100%;\n    display:flex;\n    padding:15px;\n    flex-direction:column;\n    flex-wrap:wrap;\n    justify-content:space-between;\n    text-align:center;\n    transform:rotateY(-180deg);\n    border-radius:0.5rem;\n    h4\n    {\n        font-weight: 700;\n    }\n    div\n    {\n       \n    }\n    `\n    return (\n        <Globals>\n            {   \n                Cards.map((each,index) =>\n                (   \n                    \n                    <Wrapper key={index}>\n                        <Card>\n                            <Front style={{background:each.styles}}>\n                                \n                            </Front>\n                            <Back style={{background:each.styles}}>\n                               <h4>Aditional Infos</h4>\n                               <div style={{textAlign:\"justify\",background:\"white\"}}>\n                                    <h3>{each.CardBack.type}</h3>\n                                    <div>{each.CardBack.PerOneMillion}</div>\n                               </div>\n                            </Back>\n                        </Card>\n                    </Wrapper>\n                ))\n            }\n        </Globals>\n    )\n}\n\nexport default GlobalData\n"]},"metadata":{},"sourceType":"module"}