{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/sayantan/Documents/CODE/React/cov-live/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/home/sayantan/Documents/CODE/React/cov-live/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function _templateObject7(){const data=_taggedTemplateLiteral([\"\\n    text-align:justify;\\n    padding:10px;\\n    border-radius:0.5rem;\\n    background:rgba(255, 255, 255, 0.3);\"]);_templateObject7=function _templateObject7(){return data;};return data;}function _templateObject6(){const data=_taggedTemplateLiteral([\"\\n    position:absolute;\\n    backface-visibility:hidden;\\n    color:white;\\n    width:100%;\\n    height:100%;\\n    display:flex;\\n    padding:15px;\\n    flex-direction:column;\\n    flex-wrap:wrap;\\n    justify-content:space-between;\\n    text-align:center;\\n    transform:rotateY(180deg);\\n    border-radius:0.5rem;\\n    h4\\n    {\\n        font-weight: 500;\\n    }\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){const data=_taggedTemplateLiteral([\"\\n    width:100%;\\n    height:fit-content;\\n    display : flex;\\n    flex-flow : column;\\n    flex-wrap: wrap;\\n    justify-content:space-between;\\n    text-align:justify;\\n    position : absolute;\\n    top:10px;\\n    left: 20px;\\n    \"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){const data=_taggedTemplateLiteral([\"\\n    position:absolute;\\n    backface-visibility:hidden;\\n    color:black;\\n    width:100%;\\n    height:100%;\\n    border-radius:0.5rem;\\n    transform:rotateY(0deg);\\n    \"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){const data=_taggedTemplateLiteral([\"\\n    width:100%;\\n    height:100%;\\n    position:absolute;\\n    backface-visibility:hidden;\\n    transform-style:preserve-3d;\\n    transition:1s all;\\n    &:active{\\n        transform: rotateY(180deg);\\n    }\\n    \"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){const data=_taggedTemplateLiteral([\"\\n      position:relative;\\n      transition:0.8s all;\\n      height:400px;\\n      width:400px;\\n      margin-bottom:20px;\\n      perspective:1000px;\\n      overflow :hidden;\\n    \"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){const data=_taggedTemplateLiteral([\"\\n    display:flex;\\n    flex-wrap:wrap;\\n    flex-direction:row;\\n    justify-content:space-between;\\n    \"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useEffect,useState}from'react';import{GlobalUrl}from'../../axios';import styled from'styled-components';import AreaChartCard from'./CardGraph/AreaChartCard';import{IoIosArrowDropupCircle}from'react-icons/io';import Tilt from'react-tilt';const GlobalData=()=>{const _useState=useState([]),_useState2=_slicedToArray(_useState,2),GlobalInfo=_useState2[0],setData=_useState2[1];const _useState3=useState({Cases:[],Recovered:[],Deaths:[],Actives:[]}),_useState4=_slicedToArray(_useState3,2),Historical=_useState4[0],setHistory=_useState4[1];useEffect(()=>{GlobalUrl.get(\"/all\").then(resp=>{setData(resp.data);}).catch(err=>{console.log(err);});},[]);useEffect(()=>{GlobalUrl.get('/historical/all').then(resp=>{const CaseDiff=Object.values(resp.data.cases).map((each,id)=>{return Object.values(resp.data.cases)[id+1]-each;}).filter(each=>!!each).map(each=>Math.abs(each));const actives=Object.values(resp.data.cases).map((each,id)=>{return each-Object.values(resp.data.recovered)[id];}).map((each,id)=>{return each-Object.values(resp.data.deaths)[id];});const ActiveDiff=actives.map((each,id)=>{return actives[id+1]-each;}).filter(each=>!!each).map(each=>Math.abs(each));const RecoveredDiff=Object.values(resp.data.recovered).map((each,id)=>{return Object.values(resp.data.recovered)[id+1]-each;}).filter(each=>!!each).map(each=>Math.abs(each));const DeathDiff=Object.values(resp.data.deaths).map((each,id)=>{return Object.values(resp.data.deaths)[id+1]-each;}).filter(each=>!!each).map(each=>Math.abs(each));setHistory({Cases:CaseDiff,Actives:ActiveDiff,Recovered:RecoveredDiff,Deaths:DeathDiff});}).then(err=>{console.log(err);});},[]);const Cards=[{styles:\"linear-gradient(to right, #e53935, #e35d5b)\",color:\"rgb(255, 196, 196)\",CardFront:{type:\"Total\",CurrData:GlobalInfo.cases,NewCase:GlobalInfo.todayCases,HistoryData:Historical.Cases},CardBack:{affc:\"Affected Countries.\",affectedCountries:GlobalInfo.affectedCountries,type:\"Cases per million\",PerOneMillion:GlobalInfo.casesPerOneMillion,tN:\"Total tests\",ts:GlobalInfo.tests,tPM:\"Tests per million\",tPerOneMillion:GlobalInfo.testsPerOneMillion}},{styles:\"linear-gradient(to right, #ff512f, #f09819)\",color:\"rgb(255, 222, 201)\",CardFront:{type:\"Active\",CurrData:GlobalInfo.active,NewCase:GlobalInfo.todayCases,HistoryData:Historical.Actives},CardBack:{type:\"Active per million\",PerOneMillion:GlobalInfo.activePerOneMillion,tN:\"Critical Cases\",ts:GlobalInfo.critical,tPM:\"Critical per million\",tPerOneMillion:GlobalInfo.criticalPerOneMillion}},{styles:\"linear-gradient(to right, #4cb8c4, #3cd3ad)\",color:'rgb(201, 255, 238)',CardFront:{type:\"Recovered\",CurrData:GlobalInfo.recovered,NewCase:GlobalInfo.todayRecovered,HistoryData:Historical.Recovered},CardBack:{type:\"Recovered per million\",PerOneMillion:GlobalInfo.recoveredPerOneMillion}},{styles:\"linear-gradient(to right, #4b79a1, #283e51)\",color:\"rgb(193, 193, 193)\",CardFront:{type:\"Deaths\",CurrData:GlobalInfo.deaths,NewCase:GlobalInfo.todayDeaths,HistoryData:Historical.Deaths},CardBack:{type:\"Deaths per million\",PerOneMillion:GlobalInfo.deathsPerOneMillion}}];const Globals=styled.div(_templateObject());const Wrapper=styled.div(_templateObject2());const Card=styled.div(_templateObject3());const Front=styled.div(_templateObject4());const FrontInfo=styled.div(_templateObject5());const Back=styled.div(_templateObject6());const CardBackInfos=styled.div(_templateObject7());return/*#__PURE__*/React.createElement(Globals,null,Cards.map((each,index)=>/*#__PURE__*/React.createElement(Tilt,{options:{max:25,perspective:500,scale:1,speed:1000,transition:true,axis:null,reset:true,easing:\"cubic-bezier(.03,.98,.52,.99)\"}},/*#__PURE__*/React.createElement(Wrapper,{key:index},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Front,{style:{background:each.styles,color:\"#fff\"}},/*#__PURE__*/React.createElement(FrontInfo,null,/*#__PURE__*/React.createElement(\"h5\",{style:{fontWeight:500}},each.CardFront.type),/*#__PURE__*/React.createElement(\"div\",{style:{fontWeight:700,fontSize:\"50px\",marginTop:-15}},(each.CardFront.CurrData/1000).toFixed(2),\"K\"),/*#__PURE__*/React.createElement(\"div\",{style:{fontSize:\"17px\",marginTop:-5}},each.CardFront.NewCase,\" \",/*#__PURE__*/React.createElement(IoIosArrowDropupCircle,null))),/*#__PURE__*/React.createElement(\"div\",{style:{flex:3.1}},/*#__PURE__*/React.createElement(AreaChartCard,{Data:each.CardFront.HistoryData,Names:each.CardFront.type}))),/*#__PURE__*/React.createElement(Back,{style:{background:each.styles}},/*#__PURE__*/React.createElement(\"h4\",null,\"Aditional Infos\"),/*#__PURE__*/React.createElement(CardBackInfos,null,/*#__PURE__*/React.createElement(\"h3\",null,each.CardBack.type),/*#__PURE__*/React.createElement(\"div\",null,each.CardBack.PerOneMillion),/*#__PURE__*/React.createElement(\"h3\",null,each.CardBack.affc),/*#__PURE__*/React.createElement(\"div\",null,each.CardBack.affectedCountries),/*#__PURE__*/React.createElement(\"h3\",null,each.CardBack.tN),/*#__PURE__*/React.createElement(\"div\",null,each.CardBack.ts),/*#__PURE__*/React.createElement(\"h3\",null,each.CardBack.tPM),/*#__PURE__*/React.createElement(\"div\",null,each.CardBack.tPerOneMillion)),/*#__PURE__*/React.createElement(\"h6\",{style:{opacity:0.5}},\"CovidApi.all\")))))));};export default GlobalData;","map":{"version":3,"sources":["/home/sayantan/Documents/CODE/React/cov-live/src/components/Global/GlobalData.js"],"names":["React","useEffect","useState","GlobalUrl","styled","AreaChartCard","IoIosArrowDropupCircle","Tilt","GlobalData","GlobalInfo","setData","Cases","Recovered","Deaths","Actives","Historical","setHistory","get","then","resp","data","catch","err","console","log","CaseDiff","Object","values","cases","map","each","id","filter","Math","abs","actives","recovered","deaths","ActiveDiff","RecoveredDiff","DeathDiff","Cards","styles","color","CardFront","type","CurrData","NewCase","todayCases","HistoryData","CardBack","affc","affectedCountries","PerOneMillion","casesPerOneMillion","tN","ts","tests","tPM","tPerOneMillion","testsPerOneMillion","active","activePerOneMillion","critical","criticalPerOneMillion","todayRecovered","recoveredPerOneMillion","todayDeaths","deathsPerOneMillion","Globals","div","Wrapper","Card","Front","FrontInfo","Back","CardBackInfos","index","max","perspective","scale","speed","transition","axis","reset","easing","background","fontWeight","fontSize","marginTop","toFixed","flex","opacity"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { GlobalUrl } from '../../axios'\nimport styled from 'styled-components'\nimport AreaChartCard from './CardGraph/AreaChartCard'\nimport { IoIosArrowDropupCircle } from 'react-icons/io'\nimport Tilt from 'react-tilt'\n\nconst GlobalData = () => {\n    const [GlobalInfo,setData] = useState([])\n    const [Historical,setHistory] = useState(\n        {\n            Cases : [],\n            Recovered : [],\n            Deaths : [],\n            Actives : []\n        }\n    )\n    useEffect(() =>\n    {\n        GlobalUrl.get(`/all`)\n        .then(resp =>\n            {\n                setData(resp.data)\n            })\n        .catch(err =>\n            {\n                console.log(err)\n            })\n    },[])\n    useEffect(() =>\n    {\n        GlobalUrl.get('/historical/all')\n        .then(resp =>\n            {\n                const CaseDiff = Object.values(resp.data.cases).map((each,id) =>\n                {\n                    return Object.values(resp.data.cases)[id+1] - each\n                }).filter(each => !!each).map(each => Math.abs(each))\n                const actives = Object.values(resp.data.cases).map((each,id) =>\n                {\n                    return each - Object.values(resp.data.recovered)[id]\n                }).map((each,id) =>\n                {\n                    return each - Object.values(resp.data.deaths)[id]\n                })\n                const ActiveDiff = actives.map((each,id) =>\n                {\n                    return actives[id+1] - each\n                }).filter(each => !!each).map(each => Math.abs(each))\n                const RecoveredDiff = Object.values(resp.data.recovered).map((each,id) =>\n                {\n                    return Object.values(resp.data.recovered)[id+1] - each\n                }).filter(each => !!each).map(each => Math.abs(each))\n                const DeathDiff =  Object.values(resp.data.deaths).map((each,id) =>\n                {\n                    return  Object.values(resp.data.deaths)[id+1] - each\n                }).filter(each => !!each).map(each => Math.abs(each))\n                setHistory(\n                    {\n                        Cases : CaseDiff,\n                        Actives : ActiveDiff,\n                        Recovered : RecoveredDiff,\n                        Deaths : DeathDiff\n                    }\n                )\n            })\n        .then(err =>\n            {\n                console.log(err);\n            })\n    },[])\n    const Cards=[\n        {\n            styles:\"linear-gradient(to right, #e53935, #e35d5b)\",\n            color : \"rgb(255, 196, 196)\",\n            CardFront:{\n                type:\"Total\",\n                CurrData:GlobalInfo.cases,\n                NewCase:GlobalInfo.todayCases,\n                HistoryData : Historical.Cases\n                \n            },\n            CardBack:{\n                affc:\"Affected Countries.\",\n                affectedCountries:GlobalInfo.affectedCountries,\n                type:\"Cases per million\",\n                PerOneMillion: GlobalInfo.casesPerOneMillion,\n                tN:\"Total tests\",\n                ts:GlobalInfo.tests,\n                tPM:\"Tests per million\",\n                tPerOneMillion:GlobalInfo.testsPerOneMillion\n            }\n        },\n        {\n            styles:\"linear-gradient(to right, #ff512f, #f09819)\",\n            color:\"rgb(255, 222, 201)\",\n            CardFront:{\n                type:\"Active\",\n                CurrData:GlobalInfo.active,\n                NewCase:GlobalInfo.todayCases,\n                HistoryData : Historical.Actives\n            },\n            CardBack:{\n                type:\"Active per million\",\n                PerOneMillion:GlobalInfo.activePerOneMillion,\n                tN:\"Critical Cases\",\n                ts:GlobalInfo.critical,\n                tPM:\"Critical per million\",\n                tPerOneMillion:GlobalInfo.criticalPerOneMillion,\n            }\n        },\n        {\n            styles:\"linear-gradient(to right, #4cb8c4, #3cd3ad)\",\n            color:'rgb(201, 255, 238)',\n            CardFront:{\n                type:\"Recovered\",\n                CurrData:GlobalInfo.recovered,\n                NewCase:GlobalInfo.todayRecovered,\n                HistoryData : Historical.Recovered\n                \n            },\n            CardBack:{\n               type:\"Recovered per million\",\n               PerOneMillion:GlobalInfo.recoveredPerOneMillion\n            }\n        },\n        {\n            styles:\"linear-gradient(to right, #4b79a1, #283e51)\",\n            color:\"rgb(193, 193, 193)\",\n            CardFront:{\n                type:\"Deaths\",\n                CurrData:GlobalInfo.deaths,\n                NewCase:GlobalInfo.todayDeaths,\n                HistoryData : Historical.Deaths\n          \n            },\n            CardBack:{\n               type:\"Deaths per million\",\n               PerOneMillion:GlobalInfo.deathsPerOneMillion\n            }\n        }\n    ]\n    const Globals = styled.div`\n    display:flex;\n    flex-wrap:wrap;\n    flex-direction:row;\n    justify-content:space-between;\n    `\n    const Wrapper= styled.div`\n      position:relative;\n      transition:0.8s all;\n      height:400px;\n      width:400px;\n      margin-bottom:20px;\n      perspective:1000px;\n      overflow :hidden;\n    `\n    const Card= styled.div`\n    width:100%;\n    height:100%;\n    position:absolute;\n    backface-visibility:hidden;\n    transform-style:preserve-3d;\n    transition:1s all;\n    &:active{\n        transform: rotateY(180deg);\n    }\n    `\n    const Front = styled.div`\n    position:absolute;\n    backface-visibility:hidden;\n    color:black;\n    width:100%;\n    height:100%;\n    border-radius:0.5rem;\n    transform:rotateY(0deg);\n    `\n    const FrontInfo = styled.div`\n    width:100%;\n    height:fit-content;\n    display : flex;\n    flex-flow : column;\n    flex-wrap: wrap;\n    justify-content:space-between;\n    text-align:justify;\n    position : absolute;\n    top:10px;\n    left: 20px;\n    `\n\n\n    const Back = styled.div`\n    position:absolute;\n    backface-visibility:hidden;\n    color:white;\n    width:100%;\n    height:100%;\n    display:flex;\n    padding:15px;\n    flex-direction:column;\n    flex-wrap:wrap;\n    justify-content:space-between;\n    text-align:center;\n    transform:rotateY(180deg);\n    border-radius:0.5rem;\n    h4\n    {\n        font-weight: 500;\n    }`\n    const CardBackInfos = styled.div`\n    text-align:justify;\n    padding:10px;\n    border-radius:0.5rem;\n    background:rgba(255, 255, 255, 0.3);`\n\n    return (\n        <Globals>\n            {   \n                Cards.map((each,index) =>\n                (   \n                \n                    <Tilt options={{\n                        max:            25,     \n                        perspective:    500,   \n                        scale:          1,      \n                        speed:          1000,   \n                        transition:     true,  \n                        axis:           null,   \n                        reset:          true, \n                        easing:         \"cubic-bezier(.03,.98,.52,.99)\"\n                    }}><Wrapper key={index}>\n                        <Card>\n                            <Front style={{background:each.styles,color:\"#fff\"}}>\n                            <FrontInfo>\n                                    <h5 style={{fontWeight:500}}>{each.CardFront.type}</h5>\n                                    <div style={{fontWeight:700,fontSize:\"50px\",marginTop:-15}}>{(each.CardFront.CurrData/1000).toFixed(2)}K</div>\n                                    <div style={{fontSize:\"17px\",marginTop:-5}}>{each.CardFront.NewCase} <IoIosArrowDropupCircle /></div>\n                            </FrontInfo>\n                                <div style={{flex: 3.1}} ><AreaChartCard Data={each.CardFront.HistoryData} Names={each.CardFront.type}/></div>\n                            </Front>\n                            <Back style={{background:each.styles}}>\n                               <h4>Aditional Infos</h4>\n                                <CardBackInfos>\n                                    <h3>{each.CardBack.type}</h3>\n                                    <div>{each.CardBack.PerOneMillion}</div>\n                                    <h3>{each.CardBack.affc}</h3>\n                                    <div>{each.CardBack.affectedCountries}</div>\n                                    <h3>{each.CardBack.tN}</h3>\n                                    <div>{each.CardBack.ts}</div>\n                                    <h3>{each.CardBack.tPM}</h3>\n                                    <div>{each.CardBack.tPerOneMillion}</div>\n                                </CardBackInfos>\n                               <h6 style={{opacity:0.5}}>CovidApi.all</h6>\n                            </Back>\n                        </Card>\n                    </Wrapper></Tilt>\n                ))\n            }\n        </Globals>\n    )\n}\n\nexport default GlobalData"]},"metadata":{},"sourceType":"module"}