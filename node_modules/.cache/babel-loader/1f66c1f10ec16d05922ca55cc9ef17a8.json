{"ast":null,"code":"import _slicedToArray from \"/home/sayantan/Documents/CODE/React/cov-live/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sayantan/Documents/CODE/React/cov-live/src/components/Tables&Maps/Regional Table/RegionalComponents/LineG.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { GlobalUrl } from '../../../../axios';\n\nconst LineG = ({\n  Country\n}) => {\n  const _useState = useState({\n    active: [],\n    recovered: [],\n    death: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        linedata = _useState2[0],\n        setData = _useState2[1];\n\n  const FetchData = sample => {\n    const cases = Object.values(sample.timeline.cases);\n    const recovered = Object.values(sample.timeline.recovered);\n    const deaths = Object.values(sample.timeline.deaths);\n    const RecovDiff = recovered.map((each, id) => {\n      return recovered[id + 1] - each;\n    }).filter((each, id) => !!each);\n    const DeathsDiff = deaths.map((each, id) => {\n      return deaths[id + 1] - each;\n    }).filter((each, id) => !!each);\n    const active = cases.map((each, id) => each - recovered[id] - deaths[id]);\n    const ActiveDiff = active.map((each, id) => {\n      return active[id + 1] - each;\n    }).filter((each, id) => !!each).map(eaxh => Math.abs(eaxh));\n    setData({\n      recovered: RecovDiff,\n      death: DeathsDiff,\n      active: ActiveDiff\n    });\n  };\n\n  useEffect(() => {\n    GlobalUrl.get(\"/historical/india?lastdays=30\").then(resp => {\n      FetchData(resp.data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    if (Country) {\n      //const newCountry = Country.toLowerCase()\n      GlobalUrl.get(\"/historical/\".concat(Country, \"?lastdays=30\")).then(resp => {\n        FetchData(resp.data);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"djfdhfhjf\");\n};\n\nexport default LineG;","map":{"version":3,"sources":["/home/sayantan/Documents/CODE/React/cov-live/src/components/Tables&Maps/Regional Table/RegionalComponents/LineG.js"],"names":["React","useState","useEffect","ReactApexChart","GlobalUrl","LineG","Country","active","recovered","death","linedata","setData","FetchData","sample","cases","Object","values","timeline","deaths","RecovDiff","map","each","id","filter","DeathsDiff","ActiveDiff","eaxh","Math","abs","get","then","resp","data","catch","err","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactApexChart from 'react-apexcharts'\nimport { GlobalUrl } from '../../../../axios'\n\nconst LineG = ({Country}) => {\n    const [linedata,setData] = useState({\n        active : [],\n        recovered : [],\n        death : []\n    })\n    const FetchData = (sample) =>\n    {\n        const cases = Object.values(sample.timeline.cases)\n        const recovered = Object.values(sample.timeline.recovered)\n        const deaths = Object.values(sample.timeline.deaths) \n       const RecovDiff = recovered.map((each,id) =>\n        {\n            return recovered[id+1] - each\n        }).filter((each,id) => !! each)\n        const DeathsDiff = deaths.map((each,id) =>\n        {\n            return deaths[id+1] - each\n        }).filter((each,id) => !! each)\n        const active = cases.map((each,id) =>\n        (\n            each - recovered[id] - deaths[id]\n        ))\n        const ActiveDiff = active.map((each,id) =>\n        {\n            return active[id+1] - each\n        }).filter((each,id) => !! each).map(eaxh => Math.abs(eaxh))\n        setData({\n            recovered : RecovDiff,\n            death : DeathsDiff,\n            active : ActiveDiff\n        })\n    }\n    useEffect(() =>\n    {\n        GlobalUrl.get(`/historical/india?lastdays=30`)\n        .then(resp =>\n            {  \n               FetchData(resp.data)\n            })\n            .catch(err =>\n            {\n                console.log(err)\n            })\n        if(Country)\n        {\n            //const newCountry = Country.toLowerCase()\n            GlobalUrl.get(`/historical/${Country}?lastdays=30`)\n            .then(resp =>\n                {\n                    FetchData(resp.data)\n                })\n        }\n    },[])\n    return (\n      <div>djfdhfhjf</div>\n    )\n}\n\nexport default LineG\n"]},"metadata":{},"sourceType":"module"}